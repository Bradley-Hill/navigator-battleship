{"version":3,"sources":["ship.ts","gameboard.ts","player.ts","gameLoop.ts","script.ts"],"names":[],"mappings":";;;;;AIAA,IAAA,UAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;ADAA,AFAA,ACAA,AEGA,AJMA,IGTA,AFAA,ACAA,IEGQ,CAAC,AJMO,CCThB,GAAA,EEAA,ADAA,GCAA,ADAA,CFS0B,CCT1B,ADS2B,CCT3B,GDSuC,CGTvC,ADAA,AEGyB,CDHzB,ADAA,AEG0B,AJMa,QCTvC,CAAA,SEAA,ADAA,AEG4C,CDH5C,ADAA,CEG8C,YAAA;ADF9C,AFuBA,ACZA,EERE,AJMA,EGTF,ECGQ,GHoBQ,ACZA,AFFP,GGTT,GAAA,GCGoB,GFQQ,AERL,CDHvB,ADW6B,CCX7B,CFuB+B,CAAC,IAAY,ACZC,AERd,CAAC,CHoBY,ACZC,OCX7C,CAAA,ICG6C,CAAC,WAAW,CAAC;ADQ1D,EFaE,ACZA,AERA,EJME,ECcE,AGpBE,GDOQ,ADCP,CFFC,EAAE,GCcG,CDdC,ECca,CGpBR,GAAG,CDOM,CAAA,EAAA,ICPE,CAAC,aAAa,CAAC,gBAAgB,CAAC;EDQ9D,ACPA,EHoBE,ACZA,AFFA,EGCE,ACPE,EHoBA,EAAE,CCZC,AFFA,EEEE,AFFA,CGCC,AFaA,ADdA,GGCa,CCPP,EFQA,CERG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC;EAE5D,EDME,AFaA,ACZA,AFFA,EILI,EHmBA,ADdA,ECcE,ADdA,GEEG,CEPG,CDMD,AFaA,ACZA,AFFA,CCcC,ACZD,CCDE,ADCF,AEPI,CDMF,ACNE,CDMF,ADCF,AEPI,CHmBC,CEbH,AFaI,AGnBF,QDMF,CAAA,ADCF,CAAA,AEPI,CAAA,UDMU,EAAC,EDCA,AEPG,EDMC,ADCH,AEPE,CDME,ACNA,CFOF,CAAC;EELhC,EDKE,ADCA,AFFA,ECamB,AGjBjB,EFME,EAAE,EDWmB,ADbjB,EGCE,AFYiB,ADbjB,EGCE,CAAA,ADCC,CCDD,AHDE,CIJC,CDKH,ADCI,QCDJ,CAAA,CDCc,CENC,EFME,QCDL,CCLc,CDKb,ADCc,CENC,IDKV,CAAC;IAC/B,AFW+B,ACV/B,AENA,AJIA,CCYiC,EAAE,ADZhC,EAAA,GEEK,CCDC,CDCC,AENA,CDKC,ACLA,GJIR,CCYgC,ECVlB,CFFd,CIJgB,CDKR,ACLS,AJIjB,UGCQ,CCLoB,CDKpB,ACLqB,SAAS,EAAE,aAAa,CAAC;EAC3D,CAAC,CFMC,ECDE,AFWA,ADZA,GIJG,CDKC,AHDA,CGCC,AHDA,ECYL,ICVW,CDUN,ADZO,CCYN,ACVO,CFFC,EGCE,CAAC,AFWP,CAAC,ICVE,ICDa,GAAG,CAAA,CAAA,EAAA,GDCN,CAAa,EAAE,CAAa,EAAE,ECDxB,CAAA,KDCwC,EAAA,QCDzB,EAAC,EAAE,CAAC;ICJlD,AJIA,CAAC,CGCC,ADAuB,EDUV,EEVT,ADAmB,CCAlB,ADAkB,AELlB,CAAC,EHea,EAAE,ACVE,CELZ,CAAC,GFKW,CCAP,ADAO,CCAN,CDAM,QCAG,CAAC,WAAW,ACLA,CDKC,ACLA,CDKC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;ECJjE,EJIE,EGCE,AFSyB,CAAE,CCVJ,CDUM,ACVN,CCCnB,AHDA,CGCC,CDDkB,AFAnB,CEAgC,QDUP,ADVzB,CGCY,CAAC,KHDb,EAAA,EGCsB,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;ECJjE,IDKI,ADFoC,AEHpC,AJIA,ECSmC,EER/B,AHDA,CGCC,GHDG,CCS4B,ADT3B,GIJG,IDKI,AHDA,CGCC,GHDG,IIJI,AJIA,CAAC,CGCC,CAAC,IHDI,EAAE,EIJE,EAAE,CDKC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;ICJ/D,EDME,ADJsC,EFEpC,EGEE,AFOF,ACXoC,CCIjC,ADJiC,CFEhC,CAAC,CIJC,CAAC,CFE6B,CFE3B,CCSD,EAAE,ADTE,CGEC,ADJuB,CCItB,ADJsB,CEFrB,CFEqB,AEFpB,AJIA,CCSD,MEPQ,GAAG,CAAA,ACNC,CDMD,ACNE,EDMF,OCNW,EAAE,EDMb,CAAA,SCNyB,CAAC,KDMX,EAAC,EAAE,CAAC;ECLnD,CAAC,GDMG,AHFA,EEHsC,CAAA,AEDnC,CDMC,AFOF,CEPG,CDLiC,CDYjC,ACZ8C,EDY5C,KAAK,CEPG,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;ICL9D,AJIA,EGEE,ADNmD,ICM/C,AFOF,CEPG,ACNA,CAAC,EHaA,EAAE,CGbG,CAAC,GDMG,CAAC,SAAS,CAAC,WAAW,ACNA,CDMC,ACNA,CDMC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;ECLhE,CJIC,GGEG,ADNA,GDaC,CEPG,CAAC,EDNE,CAAC,GAAG,CAAC,CAAC,CAAC,CCMC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC;AHDlE,EIHE,IDKI,AFEmC,ACRnC,AECA,CHWE,CAAC,EENC,CAAC,EDNE,CAAC,GAAG,CAAC,AECA,CFDC,CAAC,AECA,EDKE,CAAA,CAAE;AHjBxB,IGkBI,AFCE,AGNF,CDKC,AFKI,CACJ,ACZC,CFZN,CAAA,MEYc,CAAC,CECC,CAAC,CJbjB,GAAA,GEYwB,CAAC,MFZzB,EIaiC,CAAC,IFDI,CAAC,CAAC,CECC,CFDC,CAAC,AECA,CFDC,WECD;IDMvC,AFMA,ACZA,CAAC,CECC,QAAQ,CDKC,AFMA,AGXA,EDKE,AFMF,OGXS,CAAA,CDKP,AFMF,AGXW,YDKC,AFOrB,CEP+B,EAAE,CAAU,EAAA,IFOzB,EAClB,UAAkB,EAClB,QAAgB,EAChB,WAAsC,EAAA;ICdxC,AEAA,CAAC,CDIY,AFYX,AGhBA,IDIW,AFYP,IAAI,CEZG,EFYA,CEZA,AFYA,CAAA,CChBG,CDgBH,CEZA,ADJK,KDgBL,CAAA,GChBK,ODgBK,EAAC,QAAQ,AChBJ,CDgBK,OChBW,EAAA;EEC9C,CAAC,GDIG,AFYA,AChBA,GEAG,CDIC,AFYA,AChBA,CDgBC,AChBA,GCIG,CAAC,ADJA,CAAC,GDgBG,GAAG,CEZC,ADJA,CDgBC,CEZC,ADJA;IECrB,EHiBE,EEbE,ADJA,GDiBG,AGjBA,CFAC,AEAA,GHiBG,CAAC,CGjBC,CAAC,CHiBC,CAAC,CCjBC,CDiBC,CAAC,CCjBC,EDiBE,GCjBG,KDiBK,EAAE,CAAC,EAAE,EAAE,MGjBM,CAAC;EAC9C,IDII,EFaE,ACjBA,IDiBI,ACjBA,CDiBC,ECjBA,CDiBG,ECjBQ,CAAC,ODiBC,IAAI,WAAW,KAAK,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;EGfjE,IDGI,EFaE,ACjBA,ECIE,CCHC,CHgBC,ACjBA,CDiBC,CEbC,CAAC,ADJF,CDiBG,ECjBQ,CAAC,EECJ,CAAC,IDGI,AFaA,CEbC,GFaG,CGhBY,EAAE,EDGT,EAAE,IFaI,AGhBwB,EAAA,GHgBnB,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;IGf7D,IDGI,AFcA,AClBA,IDkBI,AGjBA,CHiBC,AGjBA,EDGE,ADJA,CCIC,ADJA,CDkBC,EEdE,CAAC,CFcC,CGjBC,GHiBG,AClBA,AECA,CHiBC,CClBC,AECA,GHiBG,IAAI,IAAI,EEdE,CAAC,MFcM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;IGhBjE,IDGI,EFcE,AClBA,ECIE,ACHA,CDGC,ADJF,AECE,GFDC,CDkBG,CEdC,ACHA,CAAC,CFDD,CDkBG,AClBF,KAAK,CCIG,ADJF,ICIM,ADJF,CCIG,ADJF,KCIO,CDJD,AECE,CFDF,CAAE,CECG,EFDA,GCIK,EAAE,ECHP,CFDQ,AECR,CFDS,KECT,CAAU,GFDQ,CAAC,IAAI,CAAC,AECL,CAAC,IAAI,EAAA,QAAA,CAAQ;IACrE,IHiBI,EEdE,ADJA,EECE,CFDD,AECE,CDGC,CAAC,CDJD,EECI,CAAC,CFDD,CAAC,KCIO,ADJF,CCIG,ADJF,IAAI,CAAC,GECK,GFDC,AECE,CFDF,CCII,ADJF,CCIG,CAAC,CDJD,CCIG,CAAC,EAAE,ACHT,CAAA,GDGa,ADJF,CCIG,ADJF,EECZ,CAAU,MFDW,CCIG,ADJF,CCIG,CCHN,CAAC,CFDM,CAAC,EECH,EAAA,QAAA,CAAQ;IAClE,IHiBI,AGjBE,EDGA,ADHA,EDiBE,AGjBE,CHiBD,CEdC,ADHE,CCGD,ACHE,MHiBI,CAAC,CGjBG,CAAC,CFAC,CDiBD,CAAC,CAAC,ACjBE,CCGD,AFcA,CEdA,CAAE,AFcA,CAAC,CAAC,CAAC,ECjBI,CAAC,EEAE,OFAO,CAAC,cAAc,CAAA,CAAE;IEC7D,IHiBI,AGjBA,CAAC,CDGC,ADHA,ICGI,ADHE,AEAF,CDGC,ACHA,EHiBE,CAAC,CEdC,CAAC,EFcE,ACjBE,CDiBD,CAAC,CAAC,ACjBE,CDiBD,AGjBA,CHiBC,AGjBA,CDGC,AFcA,CAAC,CEdC,GFcG,ACjBE,CAAC,AEAF,EHiBE,AGjBA,IHiBI,GCjBK,CAAC,CEAD,CAAC,IAAI,CAAC,IFAM,CAAA,CAAE,EEAA,CAAA,CAAE,CAAC;IAC1D,IHiBI,CGjBC,CFAC,ECGE,CCHC,CFCD,AEDE,CFCD,CCEG,CAAC,AFcA,AGjBA,CHiBC,AGjBA,EAAE,CAAC,CHiBC,CAAC,CAAC,AGjBA,CHiBC,CAAC,AChBF,CDgBG,AChBF,CCEG,AFcA,CEdC,AFcA,EChBA,CAAC,CEDG,CAAC,GHiBG,CGjBC,CDGC,CAAA,AFcC,AGjBA,CDGC,ACHA,CFCV,CEDY,CHiBC,CGjBC,CFCV,EAAA;MDiB7B,AGjBA,KAAK,CDGC,ADH4B,GEAzB,CDGC,ACHA,CDGC,EDHuB,AEArB,CAAC,EAAE,CFAsB,AEArB,CFAsB,CAAC,CAAC,AEArB,CDGC,CAAC,GDHwB,GAAC,CEAlB,CAAC,EDGE,ADHmB,CCGnB,CAAE,ACHA,EFAqB,AEAnB,CFAoB,AEAnB,CFAoB,CAAC,AEAnB,EAAE,EFAqB,GAAC;MDkB/D,EGjBE,EFDgC,CAA6B,CCIzD,ADJ0D,AECxD,CHiBD,GCjBD,AEAM,CHiBD,ACjBJ,EEAQ,GDGC,CAAC,EDHF,CAAC,CEAO,CAAC,EFAJ,CAAC,ICGJ,MDHK,AEAe,CAAC,GFAZ,EAAA,AEAiB,CAAC;IHkB9C,CAAC,GGjBG,IFD6B,AECzB,CAAC,CDEgB,KDHQ,ECGR,CCFP,CFDmB,AEClB,CFDmB,CAAC,CCGV,ADHW,AEClB,CDEQ,ACFP,IFDsB,EEChB,CFDiB,AEChB,IDEW,ADHS,CCGT,CAAE,EDHW,CAAC,CAAC,CAAC,KAAK,GAAC;IDmB/D,IGjBI,EFF6B,CAA8B,CCGtC,ADHuC,AEExD,CDCmC,ACDlC,CFDD,CCEqC,EFgBhC,CEhBmC,CAAC,AFgBpC,CGjBG,CAAC,CAAC,GAAG,CAAC,CAAC,CHiBV,OGjBkB,CAAA,CAAE,KHiBnB,UAAkB,EAAE,UAAkB,EAAA;QGhBhD,EDCE,EDFE,AECA,CAAC,OAAO,CFDC,AECA,CAAC,EFDE,CECC,CAAC,CAAC,CFDC,OECO,CAAA,CAAE;MHiB/B,EEfE,ACDA,EHgBE,ACjBA,MECM,CAAC,EHgBE,CAAC,IAAI,CAAC,GGhBG,CAAC,IAAI,CAAC,CHgBC,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE;MEdrD,ACDA,CDCC,CFeC,ACjBA,KCEK,IFeI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,IAAI;IGfrD,IDCI,AFeA,ACjBA,CDiBA,EAAA,GAAA,CEfO,CAAC,ADFA,CAAC,ECEE,CAAC,GFeH,CAAC,ECjBQ,CAAC,CDiBL,CAAC,UAAU,CAAC,ACjBM,CDiBL,ACjBM,GCEG,ADFF,CCEG,CDFD,GAAC,CAAC,CDiBD,CAAC,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAA,CAAE;EGfxD,IHgBI,ACjBA,CDiBC,CEfC,IAAI,CAAC,AFeA,UEfU,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC;ECCxD,IFFI,ECEE,AFeA,GGfG,CDAC,CAAC,ADFA,CAAC,GDiBG,ACjBA,CDiBC,ACjBA,QEEQ,CDAC,ACAD,CDAC,CAAE,ACAH,EHeK,CAAC,IAAI,CAAC,CAAC,ECjBE,CAAC,ODiBO,EAAE,UAAU,CAAC,CAAC;IChB1D,AEEA,CFFC,CDiBC,EEfE,ACAE,IDAE,CAAC,IAAI,CAAC,QAAQ,EAAE,KCAO,GAC7B,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC;IHe/C,ACjBA,AEGA,CHcC,GGdK,EDDA,IAAI,ADFA,CCEC,CDFC,SAAA,CCEU,CAAC,SDFX,AEGsB,CDDD,CAAA,ADFrB,CCEuB,ACCE,QAAQ,CAAC,cAAc,CAC1D,uBAAuB,CACxB;IHaD,AGZA,EFLE,EEKI,EDHA,ADFA,CAAC,GCEG,CAAC,EFeE,EAAE,ACjBA,EDiBE,CCjBC,CAAC,ECEE,CAAC,CDFC,CAAC,AEKE,GAAG,KDHG,ADFA,CCEA,CAAE,CCGG,CAAC,cAAc,CAAC,eAAe,CAAC;IHarE,ACjBA,AEKA,IDHI,ACGE,QHYM,EAAA,SAAA,IGZiB,GAAG,MHYpB,EAAA,AGZ4B,CAAC,cAAc,CAAC,kBAAkB,CAAC;GFJ5E,CEMC,EDJE,ECIE,yBAAyB,EAAE;AFLnC,ICEI,CAAC,CFcC,AGVA,KHUK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,AGVA,CAAC,GHUG,CAAC,MAAM,CGVC,CHUC,CAAC,CGTrC,CHSuC,EAAE,KGTjC,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CACzC,GAAG,CAAC,UAAC,IAAI,EAAA;AF9CpB,ICyCI,GDzCJ,CDuDQ,ACvDR,AE8CyB,KHSZ,EGTY,EHSR,CEdC,AFcA,AGTO,CAAA,CDLL,ADzCpB,CDuDqB,CAAC,CCvDtB,CDuDwB,CAAC,AGTA,CAAI,EHSD,CEdR,CCKa,CAAC,CHSF,AGTG,CHSF,AGTG,EF9CpC,AE8CoC,EHSC,CAAC,CGTF,CAAA,CAAA,GDLhB,AFcwB,EEdxB,AFc0B,CAAC,AGTX,CAAK,CHSQ,EAAE,CGTN,CAAC,CAAC,CAAC,EAAA,GAAA,CAAG;MDJ7C,ACImB,CAA0B,CAAC,CACzC,CDLD,AFcA,GGTK,CDLD,AFcA,AGTE,CDLD,GFcG,AGTE,CHSD,AGTE,IHSE,CAAC,CEdC,AFcA,CEdC,AFcA,CAAC,CAAC,CAAC,CAAC,KEdK,CAAC,EFcE,EAAE,QEdQ,CAAA,CAAE,EAAE;ICMhD,IDLI,IFcI,CAAA,EEdG,AFcH,CEdI,EFcJ,CEdO,CAAC,EFcJ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAA,IAAA,IEdoB,AFcpB,CEdqB,CFcrB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAA,CAAE;IGRtC,IDLI,ACKA,IDLI,AFcA,CEdC,GFcG,EAAC,CAAA,EEdI,AFcJ,GEdO,AFcP,IEdW,AFcP,CAAC,IAAI,CAAC,CAAC,CAAC,AGTO,CHSN,CAAC,AGTO,CHSN,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAA,EAAE;MEbvC,ACKA,CDLC,MAAM,CFcC,GEdG,IAAI,AFcA,CEdC,IFcI,OEdO,CAAC,ACKA,CAAC,QDLQ,CAAC,ECKE,GACtC,ODNgD,CAAA,ACMxC,CDN0C,ACMzC,EDN2C,QCMjC,CAAC,SAAS,CAAC,aAAa,CACxC,GAAG,CAAC,UAAC,IAAI,EAAA;QDNZ,ACMiB,IHQb,CAAC,EEdE,ACMU,CDNT,ECMS,CDNN,AFcA,AGRM,CDNL,KCMK,CAAI,IAAI,CAAC,CAAC,CAAC,EAAA,IAAA,CAAA,CAAA,GDNQ,CAAC,ECMT,CAAK,IAAI,CAAC,CAAC,CAAC,EAAA,GAAA,CAAG;MAA1B,CAA0B,CDL3C,ACK4C,CACzC,GDNC,CAAC,ACME,CHQD,AGRE,IAAI,CAAC,EDNA,GAAG,IAAI;ICOxB,EDNE,MFcM;IEbR,ACOA,CDPC,GCOG,EHOE,kBGPkB,EAAE;IDN1B,ECOE,EHOE,IEdI,EAAE,YCOY,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAS,CAC9D,WAAW,CAAA,CAAE,CACb,GAAG,CAAC,UAAC,IAAI,EAAA;GDRf,GFcG,EGNiB,OAAA,GAAA,CAAA,MAAA,CAAI,IAAI,CAAC,CAAC,CAAC,EAAA,IAAA,CAAA,CAAA,MAAA,CAAK,IAAI,CAAC,CAAC,CAAC,EAAA,GAAA,CAAG;EDP/C,IFcI,AGPiB,CAA0B,CAAC,CDPzC,ACQA,IHMI,AGNA,CAAC,GDRG,AFcA,CGNC,CAAC;ADPnB,IFcI,AGNA,CHMC;AEnEL,IFoEI,AGNA,GD9DJ,CAAA,AC8DQ,UHMU,EAAE,EEpEpB,GAAA,IFoEoB,EGNW,EAAE,MD9DjC,KFoEoB,EAAA;MACd,AGNA,OHMO,IAAI,CAAC,WGNW,CAAC,CHMC,UGNU,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAChE,WAAW,CAAA,CAAE,CACb,GAAG,CAAC,UAAC,IAAI,EAAA;IHKd,CAAC,GGLkB,OAAA,GAAA,CAAA,MAAA,CAAI,IAAI,CAAC,CAAC,CAAC,EAAA,IAAA,CAAA,CAAA,MAAA,CAAK,IAAI,CAAC,CAAC,CAAC,EAAA,GAAA,CAAG;IHM7C,EGNmB,CAA0B,CAAC,CACzC,IAAI,CAAC,CHKC,EAAE,CGLC,CAAC,OHKF,YAAA,EAAA;IGJb,EHKE,IAAM,QAAQ,GAAe,EAAE;IGHjC,EHIE,KAAK,CGJC,CAAC,EHIE,CAAC,GAAG,CAAC,EAAE,CAAC,CGJC,CAAC,CHIC,IAAI,CAAC,GGJG,CHIC,AGJA,EHIE,CAAC,EAAE,EAAE,MGJM,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;MACxD,EHIE,EGJI,GHIC,CGJG,GHIC,AGJE,CHID,GAAG,CAAC,EAAE,CAAC,AGJE,CAAC,EHIA,IAAI,CAAC,IAAI,EAAE,AGJE,CHID,AGHhC,EHGkC,EAAE,2BGHpC,CAAA,MAAA,CAAgC,IAAI,CAAC,CAAC,CAAC,EAAA,aAAA,CAAA,CAAA,MAAA,CAAc,IAAI,CAAC,CAAC,CAAC,EAAA,IAAA,CAAI,CACjE;MACD,IHEI,AGFA,IHEI,AGFA,EAAE,EHEE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QGD3B,IHEI,AGFA,CAAC,OHEO,CAAC,CGFC,CAAC,EHEE,CAAC,AGFA,CHEC,AGFA,CHEC,EAAE,CAAC,CAAC,CAAC,SGFS,CAAC;MACrC,IHEI;IGDN,CAAC,CAAC,EHEE;IGAJ,EHCE,MGDM,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;MHEvD,AGDA,IAAM,GHCC,CGDG,GAAG,IHCE,IGDM,CAAC,aAAa,CACjC,8BAAA,CAAA,MAAA,CAA+B,IAAI,CAAC,CAAC,CAAC,EAAA,aAAA,CAAA,CAAA,MAAA,CAAc,IAAI,CAAC,CAAC,CAAC,EAAA,IAAA,CAAI,CAChE;IHAH,EGCE,IAAI,IAAI,EAAE;GHAb,KGCK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC;EHAzC,IGCI,GHDG,SAAS;AAClB,IGCI,CAAC,CAAC;AHzEN,EG0EE,KH1EF,CAAA,eAAA,GAAA,eAAA;EG2EE,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;IAC9C,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAC,KAAK,EAAA;MACnC,IAAM,MAAM,GAAG,KAAK,CAAC,MAAqB;MAC1C,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE;QACxC,IAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;QACxC,IAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;QACxC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1B,eAAe,CAAA,CAAE;MACnB,CAAC,MAAM;QACL,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC;MACtD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","file":"script.221c08a2.js","sourceRoot":"..\\src","sourcesContent":["export interface Ship {\r\n  length: number;\r\n  impacts: number;\r\n  sunk: boolean;\r\n  position: [number, number][] | null;\r\n  hit(): void;\r\n  isSunk(): void;\r\n}\r\n\r\nexport function createShip(size: number): Ship {\r\n  return {\r\n    length: size,\r\n    impacts: 0,\r\n    sunk: false,\r\n    position: null,\r\n    hit() {\r\n      this.impacts++;\r\n    },\r\n    isSunk() {\r\n      if (this.impacts >= this.length) {\r\n        this.sunk = true;\r\n      }\r\n    },\r\n  };\r\n}\r\n","import { createShip, Ship } from \"../src/ship\";\r\n\r\nexport type Cell = {\r\n  occupied: boolean;\r\n  hit: boolean;\r\n  ship: Ship | null;\r\n};\r\n\r\nexport interface Gameboard {\r\n  size: number;\r\n  grid: Cell[][];\r\n  createShips(\r\n    gameboardX: number,\r\n    gameboardY: number,\r\n    shipSize: number,\r\n    orientation: \"horizontal\" | \"vertical\"\r\n  ): Ship | null;\r\n  receiveAttack(gameboardX: number, gameboardY: number): void;\r\n  missedAttacks: [number, number][];\r\n  allShipsSunk(): boolean;\r\n  getMissedShots: () => number[][];\r\n  getHitCells: () => number[][];\r\n}\r\n\r\nexport function createGameboard(size: number): Gameboard {\r\n  let gameboard: Gameboard = {\r\n    size: size,\r\n    grid: Array.from({ length: size }, () =>\r\n      Array.from({ length: size }, () => ({\r\n        occupied: false,\r\n        hit: false,\r\n        ship: null,\r\n      }))\r\n    ),\r\n    createShips(\r\n      gameboardX: number,\r\n      gameboardY: number,\r\n      shipSize: number,\r\n      orientation: \"horizontal\" | \"vertical\"\r\n    ): Ship | null {\r\n      let ship = createShip(shipSize);\r\n      ship.position = [];\r\n\r\n      for (let i = 0; i < shipSize; i++) {\r\n        let x = gameboardX + (orientation === \"horizontal\" ? i : 0);\r\n        let y = gameboardY + (orientation === \"vertical\" ? i : 0);\r\n\r\n        if (x >= size || y >= size || gameboard.grid[x][y].occupied) {\r\n          return null;\r\n        }\r\n        ship.position.push([x, y]);\r\n        gameboard.grid[x][y].ship = ship;\r\n        gameboard.grid[x][y].occupied = true;\r\n      }\r\n      return ship;\r\n    },\r\n    receiveAttack(gameboardX: number, gameboardY: number): void {\r\n      if (gameboard.grid[gameboardX][gameboardY].occupied) {\r\n        gameboard.grid[gameboardX][gameboardY].hit = true;\r\n        gameboard.grid[gameboardX][gameboardY].ship?.hit();\r\n      } else {\r\n        gameboard.missedAttacks.push([gameboardX, gameboardY]);\r\n      }\r\n    },\r\n    missedAttacks: [],\r\n    allShipsSunk() {\r\n      for (let i = 0; i < this.grid.length; i++) {\r\n        for (let j = 0; j < this.grid.length; j++) {\r\n          if (this.grid[i][j].occupied) {\r\n            this.grid[i][j].ship?.isSunk();\r\n            if (!this.grid[i][j].ship?.sunk) {\r\n              return false;\r\n            } else {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    getMissedShots: function () {\r\n      return this.missedAttacks;\r\n    },\r\n    getHitCells: function () {\r\n      const hitCells: number[][] = [];\r\n      for (let i = 0; i < this.size; i++) {\r\n        for (let j = 0; j < this.size; j++) {\r\n          if (this.grid[i][j].hit) {\r\n            hitCells.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n      return hitCells;\r\n    },\r\n  };\r\n  return gameboard;\r\n}\r\n","import { createGameboard, Gameboard } from \"../src/gameboard\";\r\n\r\nexport interface Player {\r\n  isHuman: boolean;\r\n  gameboard: Gameboard;\r\n  name: \"Player 1\" | \"Player 2\";\r\n  isMyTurn: boolean;\r\n  makeHumanMove: (x: number, y: number, opponent: Player) => void;\r\n  makeComputerMove: (opponent: Player) => void;\r\n  toggleTurn: () => void;\r\n}\r\n\r\nexport function createPlayer(isHuman: boolean): Player {\r\n  return {\r\n    isHuman: isHuman,\r\n    gameboard: createGameboard(10),\r\n    name: isHuman ? \"Player 1\" : \"Player 2\",\r\n    isMyTurn: isHuman,\r\n    makeHumanMove: function (x: number = 0, y: number = 0, opponent: Player) {\r\n      console.log(x);\r\n      console.log(y);\r\n      opponent.gameboard.receiveAttack(x, y);\r\n    },\r\n\r\n    makeComputerMove: function (opponent: Player) {\r\n      if (!this.isHuman) {\r\n        let validMove = false;\r\n        let x: number = 0;\r\n        let y: number = 0;\r\n        while (!validMove) {\r\n          x = Math.floor(Math.random() * opponent.gameboard.size);\r\n          y = Math.floor(Math.random() * opponent.gameboard.size);\r\n\r\n          const missedShots = opponent.gameboard.getMissedShots();\r\n          const hitCells = opponent.gameboard.getHitCells();\r\n          if (\r\n            !missedShots.some((shot) => shot[0] === x && shot[1] == y) &&\r\n            !hitCells.some((cell) => cell[0] === x && cell[1] === y)\r\n          ) {\r\n            validMove = true;\r\n          }\r\n        }\r\n        opponent.gameboard.receiveAttack(x, y);\r\n      }\r\n      console.log(\"Computer made a move\");\r\n    },\r\n    toggleTurn: function () {\r\n      this.isMyTurn = !this.isMyTurn;\r\n    },\r\n  };\r\n}\r\n","import { createGameboard } from \"../src/gameboard\";\r\nimport { createPlayer, Player } from \"../src/player\";\r\n\r\nexport interface Gameloop {\r\n  startGame: () => void;\r\n  humanPlayer: Player;\r\n  compPlayer: Player;\r\n  manageTurns: (x?: number, y?: number) => void;\r\n  checkEndOfGame: () => void;\r\n  gameOver: boolean;\r\n}\r\n\r\nexport function createGameLoop(): Gameloop {\r\n  let gameLoop: Gameloop = {\r\n    humanPlayer: createPlayer(true),\r\n    compPlayer: createPlayer(false),\r\n    startGame: function () {\r\n      this.humanPlayer.gameboard = createGameboard(10);\r\n      this.humanPlayer.gameboard.createShips(0, 0, 1, \"horizontal\");\r\n      this.humanPlayer.gameboard.createShips(0, 1, 1, \"horizontal\");\r\n      this.humanPlayer.gameboard.createShips(0, 2, 1, \"horizontal\");\r\n\r\n      this.compPlayer.gameboard = createGameboard(10);\r\n      this.compPlayer.gameboard.createShips(0, 0, 1, \"horizontal\");\r\n      this.compPlayer.gameboard.createShips(0, 1, 1, \"horizontal\");\r\n      this.compPlayer.gameboard.createShips(0, 2, 1, \"horizontal\");\r\n      this.manageTurns();\r\n    },\r\n    manageTurns: function (x?: number, y?: number) {\r\n      if (this.gameOver) {\r\n        return;\r\n      }\r\n      if (this.humanPlayer.isMyTurn) {\r\n        console.log(\"Human players Turn\");\r\n        if (x !== undefined && y !== undefined) {\r\n          this.humanPlayer.makeHumanMove(x, y, this.compPlayer);\r\n          this.checkEndOfGame();\r\n          if (!this.gameOver) {\r\n            this.humanPlayer.toggleTurn();\r\n            this.compPlayer.toggleTurn();\r\n            setTimeout(() => this.manageTurns(), 200);\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"Computers players turn\");\r\n        this.compPlayer.makeComputerMove(this.humanPlayer);\r\n        this.checkEndOfGame();\r\n        if (!this.gameOver) {\r\n          this.humanPlayer.toggleTurn();\r\n          this.compPlayer.toggleTurn();\r\n        }\r\n      }\r\n    },\r\n    checkEndOfGame: function () {\r\n      if (this.compPlayer.gameboard.allShipsSunk()) {\r\n        console.log(\"Congratulations! You have won!\");\r\n        this.gameOver = true;\r\n      } else if (this.humanPlayer.gameboard.allShipsSunk()) {\r\n        console.log(\"Game Over, you lost...\");\r\n        this.gameOver = true;\r\n      }\r\n    },\r\n    gameOver: false,\r\n  };\r\n  return gameLoop;\r\n}\r\n","import { createGameLoop } from \"../src/gameLoop\";\r\nimport { Gameboard } from \"./gameboard\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const startGameBtn = document.querySelector(\"#startBtn\");\r\n  const opponentBoard = document.querySelector(\".opponentBoard\");\r\n  const playersBoard = document.querySelector(\".playersBoard\");\r\n\r\n  const gameLoop = createGameLoop();\r\n\r\n  if (opponentBoard instanceof HTMLElement) {\r\n    createGrid(gameLoop.humanPlayer.gameboard, opponentBoard);\r\n  } else {\r\n    console.error(\"Opponent board not found\");\r\n  }\r\n  if (playersBoard instanceof HTMLElement) {\r\n    createGrid(gameLoop.humanPlayer.gameboard, playersBoard);\r\n  } else {\r\n    console.error(\"Players board not found\");\r\n  }\r\n\r\n  if (startGameBtn) {\r\n    startGameBtn.addEventListener(\"click\", () => {\r\n      gameLoop.startGame();\r\n    });\r\n  } else {\r\n    console.error(\"Start Game button not found\");\r\n  }\r\n\r\n  function createGrid(gameboard: Gameboard, htmlGrid: HTMLElement) {\r\n    htmlGrid.innerHTML = \"\";\r\n    htmlGrid.style.gridTemplateColumns = `repeat(${gameboard.size}, 1fr)`;\r\n    htmlGrid.style.gridTemplateRows = `repeat(${gameboard.size}, 1fr)`;\r\n    const root = document.documentElement;\r\n    root.style.setProperty(\"--num\", gameboard.size.toString());\r\n    for (let i = 0; i < gameboard.size; i++) {\r\n      for (let j = 0; j < gameboard.size; j++) {\r\n        const cell = document.createElement(\"div\");\r\n        cell.classList.add(\"cell\");\r\n        cell.dataset.x = i.toString();\r\n        cell.dataset.y = j.toString();\r\n        htmlGrid.appendChild(cell);\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateMoveLists() {\r\n    const humanMissedAttacksElement =\r\n      document.getElementById(\"humanMissedAttacks\");\r\n    const computerMissedAttacksElement = document.getElementById(\r\n      \"computerMissedAttacks\"\r\n    );\r\n    const humanHitCellsElement = document.getElementById(\"humanHitCells\");\r\n    const computerHitCellsElement = document.getElementById(\"computerHitCells\");\r\n\r\n    if (humanMissedAttacksElement) {\r\n      humanMissedAttacksElement.textContent =\r\n        gameLoop.humanPlayer.gameboard.missedAttacks\r\n          .map((move) => `(${move[0]}, ${move[1]})`)\r\n          .join(\", \");\r\n    }\r\n    if (computerMissedAttacksElement) {\r\n      computerMissedAttacksElement.textContent =\r\n        gameLoop.compPlayer.gameboard.missedAttacks\r\n          .map((move) => `(${move[0]}, ${move[1]})`)\r\n          .join(\", \");\r\n    }\r\n\r\n    if (humanHitCellsElement) {\r\n      humanHitCellsElement.textContent = gameLoop.humanPlayer.gameboard\r\n        .getHitCells()\r\n        .map((move) => `(${move[0]}, ${move[1]})`)\r\n        .join(\", \");\r\n    }\r\n    if (computerHitCellsElement) {\r\n      computerHitCellsElement.textContent = gameLoop.compPlayer.gameboard\r\n        .getHitCells()\r\n        .map((move) => `(${move[0]}, ${move[1]})`)\r\n        .join(\", \");\r\n    }\r\n\r\n    gameLoop.humanPlayer.gameboard.missedAttacks.forEach((move) => {\r\n      const cell = document.querySelector(\r\n        `.opponentBoard .cell[data-x='${move[0]}'][data-y='${move[1]}']`\r\n      );\r\n      if (cell) {\r\n        cell.classList.add(\"missedAttacks\");\r\n      }\r\n    });\r\n\r\n    gameLoop.compPlayer.gameboard.missedAttacks.forEach((move) => {\r\n      const cell = document.querySelector(\r\n        `.playersBoard .cell[data-x='${move[0]}'][data-y='${move[1]}']`\r\n      );\r\n      if (cell) {\r\n        cell.classList.add(\"missedAttacks\");\r\n      }\r\n    });\r\n  }\r\n  document.querySelectorAll(\".cell\").forEach((cell) => {\r\n    cell.addEventListener(\"click\", (event) => {\r\n      const target = event.target as HTMLElement;\r\n      if (target.dataset.x && target.dataset.y) {\r\n        const x = parseInt(target.dataset.x, 10);\r\n        const y = parseInt(target.dataset.y, 10);\r\n        gameLoop.manageTurns(x, y);\r\n        updateMoveLists();\r\n      } else {\r\n        console.error(\"Data attributes x and y are not set\");\r\n      }\r\n    });\r\n  });\r\n});\r\n"]}