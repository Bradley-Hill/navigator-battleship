{"version":3,"sources":["ship.ts","gameboard.ts","player.ts","gameLoop.ts","script.ts"],"names":[],"mappings":";;;;;AIAA,IAAA,UAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;ADAA,ACGA,AJMA,IGTA,ICGQ,CAAC,AJMO,MGThB,GAAA,CHS0B,CAAC,IAAY,CGTvC,ACGyB,CDHzB,ACG0B,AJMa,kBGTvC,ACG4C,CDH5C,CCG8C,YAAA;ADF9C,ECGE,AJMA,EGTF,ECGQ,GJMC,GGTT,GAAA,GCGoB,GAAG,CDHvB,CAAA,MCG+B,CAAC,QDHhC,CAAA,ICG6C,CAAC,WAAW,CAAC;ADU1D,ECTE,EJME,EINI,GDSQ,CHHN,EAAE,IAAI,OGGc,CAAA,ACTJ,EDSI,CCTD,QAAQ,CAAC,aAAa,CAC/C,aAAa,CACO;EDQtB,ACPA,EJIE,EGGE,ACPE,KJIG,EAAE,CGGC,AHHA,GGGa,ECPN,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC;EAC9D,EDOE,AHHA,EIJI,EJIA,EAAE,KGGK,AHHA,EGGE,CCPG,GAAG,CDOD,OCPS,CAAC,aAAa,CAAC,eAAe,CAAC;EAE5D,EDME,AHHA,EIHI,MJGI,EIHI,AJGF,GGGG,ACNE,CAAA,AJGD,CGGC,ACNA,EAAA,ODMA,GCNA,CAAA,UDMA,EAAA,ECNc,EAAA,CAAE;EAEjC,EJEE,EGGE,ACLA,CJEC,EAAA,IGGM,IAAI,CAAC,AHHX,CIFY,GJEZ,EAAA,KGGsB,ECLE,WAAW,EAAE;IDMxC,ACLA,CDKC,CHHC,IAAI,CAAC,GIFG,CAAC,GJEG,EAAE,GIFG,CAAC,WAAW,CAAC,SAAS,EAAE,aAAa,EAAE,eAAe,CAAC;EAC5E,CAAC,CDKC,AHHA,CAAC,IIFI,MDKM,EAAE,CAAA,CAAA,EAAA,QAAA,CAAA,YAAY,EAAC,IAAI,CAAC;IAC/B,ACLA,AJEA,MAAM,CIFC,CAAC,AJEF,EGGI,EAAE,CAAA,ACLC,CDKD,ACLE,EDKF,CHHN,OGGM,AHHN,CGGM,CHHN,WGGkB,EAAC,CCLe,CAAC,GDKX,CAAC;ECJjC,EDKE,EHHE,IAAI,GGGG,CHHC,CGGC,AHHA,OAAO,EGGP,EHHW,IAAI,CAAC,GGGhB,EAAA,CHHsB,EAAE;EIDrC,IDKI,ACLA,EJEE,EGGE,CAAC,CHHC,CAAC,IAAI,CIFC,EJEE,EGGE,EHHE,CGGC,IAAI,CCLC,WAAW,EAAE;IACvC,EDKE,AHHA,IGGI,CAAC,GCLG,CAAC,ODKO,CAAC,ACLA,CAAC,QDKQ,GAAG,ACLA,CDKA,ACLC,CDKD,EAAA,MCLU,EAAE,GDKZ,CAAA,QCLwB,EAAE,KDKX,EAAC,EAAE,CAAC,ICLqB,CAAC;EAC1E,CAAC,CJEC,EGGE,GCLG,CDKC,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,CAAA,CAAE;GHF9C,CIFC,EDME,IAAI,CAAC,ACNA,CAAC,KAAK,CAAC,GDMG,CAAC,SAAS,GAAG,CAAA,CAAA,EAAA,KCNS,CAAC,KDMV,CAAA,eAAe,EAAC,EAAE,CAAC;AHHrD,EIFE,IDMI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAA,CAAE;AHnBhD,EIeE,IDKI,ACLA,CJfN,CAAA,EGoBU,CAAC,OCLO,AJflB,GAAA,CGoBsB,ACLA,CDKA,CAAE,OHpBxB,SIewC,EAAE;IDMtC,ACLA,CDKC,WCLW,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;IDMvC,ECLE,SDKS,EAAE,OCLO,CAAC,CDKR,OCLgB,GAAG,EDKT,CAAU,CCLG,CDKD,CAAU,EAAA;MAC3C,ACLA,IDKI,IAAI,ACLA,CDKC,ACLA,QDKQ,CCLC,CDKC,ACLD,CAAE;MACpB,EDKE,ECLE,YAAY,YAAY,WAAW,EAAE;MDMzC,ECLE,UAAU,CACR,QAAQ,CAAC,WAAW,CAAC,SAAS,EAC9B,YAAY,EACZ,cAAc,CACf;AFjCT,IAAA,ECmCM,ACDA,IDCI,IAAI,CAAC,ADnCf,GAAA,OAAA,CCmC0B,ADnC1B,CCmC2B,QAAQ,EAAE,ODnCrC,CAAA;AAcA,MEqBM,EDCE,CDtBQ,KEqBF,CDCC,ACDA,CDCC,GAAG,CAAC,CDtBQ,CAC1B,IEoBwB,CAAA,CAAE,CFpBV,EAChB,SCoBsC,CAAC,MDpBd,EAAA;EAEzB,EEkBE,CAAC,CAAC,EDCE,CDnBC,GCmBG,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,SAAS,EAAE;ECA9C,CAAC,CFlBC,KEkBK,CDCC,CDnBC,EAAE,CCmBC,CAAC,KDnBK,MCmBM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC;IDlB3D,AEkBA,MDCM,CCDC,CAAC,CFlBC,CCmBC,CAAC,ADnBA,CAAA,CAAA,AEkBE,CAAC,CFlBH,UCmBc,CAAA,ADnBd,CCmBgB,ADnBhB,eAAe,EAAC,EAAE,CAAC,mBEkBoC,CAAC;EACrE,EFlBE,IAAI,ECmBE,ADnBA,ICmBI,CAAC,EDnBE,ECmBE,CAAC,ADnBA,QCmBQ,EAAE,ADnBA,GAAG,UAAU;EEoBzC,EFnBE,OEmBO,CDAC,ADnBA,EAAE,ECmBE,CAAC,IDnBI,AEmBA,CACjB,MDDwB,CAAC,ECCL,EACpB,MDFmC,CAAA,CAAE,ACEhB,EACrB,UAAkB,EAAA;IFrBlB,AEuBA,QDJQ,ACIA,CAAC,GDJG,CAAC,GDnBG,EAAE,AEuBA,GAAG,EDJE,ACIA,CDJC,UAAU,ADnBA,CCmBA,CAAE;IDlBpC,AEuBA,QDHQ,ACGA,CAAC,GDHG,CDpBC,CEuBC,CFvBC,AEuBA,CDHC,CAAC,ODpBF,GCoBY,CAAC,MCGM,EDHE,CCGC,CDHC,ADpBb,CAAa,EAAE,CAAa,EAAE,EEuBlB,CAAA,KFvBkC,CEuBlC,CFvBkC,AEuBxB,SAAS,CAAC,IAAI,EAAA,QAAA,CAAQ;IACrE,EFxByB,IAAA,CAAA,CEwBjB,CAAC,CDHC,EDrBe,ECqBX,ACGA,CDHC,ACGA,EFxBU,CAAA,EAAA,KCqBA,CAAC,KCGK,GAAG,QDHQ,CAAC,ACGT,CAAA,GDHa,CAAC,ECGd,CAAU,QDHe,CAAC,ACGP,CAAC,IAAI,EAAA,QAAA,CAAQ;IAClE,IFzByB,AEyBnB,CFzBmB,GAAA,AEyBf,CFzB4B,CCsB5B,CCGG,GDHC,CAAC,ICGM,CAAC,SDHO,CAAA,CAAE,ICGM;IACrC,EF1BsC,EE0BlC,CAAC,KDHK,ACGA,CAAC,GDHG,CAAC,IAAI,CAAC,ECGE,CAAC,KDHK,EAAE,ACGA,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAA,CAAE,CAAC;IAC1D,EF3BwC,GE2BnC,CF3BmC,CAAA,EE2B/B,CAAC,EDHE,ADxB4B,CE2B3B,CAAC,EDHE,ACGA,CDHC,ADxBuB,AE2BvB,CF3BuB,EAAA,AE2BpB,QDHQ,CAAC,ACGA,CAAC,IAAI,EAAE,CAAC,EDHE,ACGA,CDHA,CAAE,ACGA;MACvC,EF5BsC,CAAA,EE4BjC,CF5BiC,CAAa,EE4B1C,CDHC,ACGA,GAAG,CDHC,ACGA,CDHC,CCGC,CAAC,GAAG,KDHK,CAAC,GCGG,CAAC,IAAI,EDHE,ACGA,CDHA,ACGC,CDHC,CCGC,EAAE;MF5BU,EE6BjD,IAAM,EDHA,ECGI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;MF5B5C,EE6BE,IDHI,ACGA,CF7BC,AE6BA,CF7BC,GAAG,CAAC,CAAC,CAAC,EE6BE,CAAC,GAAG,CAAC,MAAM,CAAC;AHtDlC,IAAA,EC0BM,EE6BE,EDHE,AFpDV,EGuDY,CHvDZ,AC0Ba,AE6BA,CF7BC,GAAG,CAAC,CAAC,CD1BnB,AC0BoB,AE6BA,CHvDpB,AGuDqB,CAAC,GAAG,CAAC,CAAC,OHvD3B,CAAA,AGuDmC,CAAA,CAAE;AH9BrC,MCEM,EC0BE,ACGA,CH/BQ,GG+BJ,CAAC,CF7BC,CAAC,KE6BK,CAAC,CAAC,EH/BS,ACEP,CDFQ,ACEP,AE6BA,CAAC,CAAC,EH/BiB,EAAA,IG+BT,CAAA,CAAE,CF7BC,CAAC,CAAC,EAAE,CAAC,CAAC;EDD1C,ECEE,CAAC,CC0BC,AF5BA,EG+BE,IAAI,GH/BG,GAAc,IG+BP,KAAK,eAAe,EAAE;IDFxC,AF5BA,ACGA,CCyBC,GF5BG,EAAE,AG+BA,IH/BI,ACGA,AE4BA,CAAC,CF5BC,SAAA,ME4Be,CAAC,IF5BhB,EAAA,CE4BuB,EAAE,UAAC,KAAK,EAAA;IDF3C,AF5BA,ECGE,EDHE,EAAE,ACGA,CAAC,CE4BC,GH/BG,CAAC,AG+BA,CAAC,CDHC,CDzBC,CCyBC,AF5BA,CAAC,CCGC,CAAC,EE4BE,CAAC,CF5BC,CAAC,CCyBR,ODzBgB,GE4BG,CAAA,CAAE,EAAE,CDHvB,EAAA;IDxBhB,CAAC,CCyBC,AF7BiB,IE6Bb,EF7BmB,EE6Bf,AF7BiB,AGgCjB,CDHC,ICGI,CAAC,KDHK,CAAC,SAAS,CAAC,YAAY,CAAA,CAAE,EAAE,0BCG0B,CAAC;IHhC5C,ACK/B,CDLiC,EAAE,CE8B/B,MCGM,CDHC,CAAC,GAAG,AF9BoB,AGiCpB,CDHC,ADzBA,AE4BA,EF5BE,SAAA,GE4BY,CAAA,CAAE,YF5BJ,ICyBoB,CAAC,GDzBL,EAAA;MDJ1C,ACKA,ECyBE,EDzBE,CAAC,CCyBC,ACGA,CDHC,AF9BP,AGiCO,EF5BE,CAAC,EDLL,CAAC,AGiCO,EDHE,EF9BL,ACKO,CCyBC,AF9BP,CCKQ,GCyBG;MACtB,CAAC,CF/BY,ACMX,IAAI,CCyBC,CF/BY,AGkCX,EHlCa,ACMX,CCyBC,ADzBA,CE4BG,GDHC,CAAC,ECGI,GAAG,KAAK,CDHD,ADzBA,AE4BE,CDHD,CDzBC,IE4BqB,IDHb,CAAC,YAAY,CAAA,CAAE,EAAE;MF/B7B,CAAE,CEgCzB,CFhC2B,CCOzB,IAAI,AE4BA,CDHC,CAAC,ECGE,CDHC,CAAC,CFhCe,CCOb,EE4BE,CF5BC,AE4BA,OAAO,CF5BC,AE4BA,CF5BC,AE4BA,IAAI,KF5BK,CCyBC,ADzBA,AE4BA,CDHC,ACGA,OAAO,CAAC,CAAC,CF5BC,CAAA,AE4BC,CF5BC;QC0BjD,AFjCiC,ECQ/B,ECyBE,CAAC,CDzBC,CDR4B,CGoC1B,IAAM,CDHD,ACGE,CF5BD,CAAC,CCyBC,ACGE,IDHE,CDzBC,GAAG,AE4BE,CF5BD,AE4BE,EF5BA,IE4BM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;MDFlD,IFjCE,ECQI,IAAI,AE4BA,EHpCA,EAAE,AGoCI,CAAC,GAAG,CHpCH,OGoCW,CAAC,IF5BE,EE4BI,CF5BW,AE4BV,CF3B5B,CAAC,CAAC,EAAE,CAAC,CAAC,AE2B6B,CAAC,CF1BpC,AE0BqC,CF1BpC,CAAC,AE0BqC,EF1BnC,AE0BqC,CF1BpC,AE0BqC,CF1BpC,EACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACR;ICqBT,CAAC,KFjCG,ECcI,CDdD,EAAE,CCcG,AEsBA,IHpCE,IGoCM,CAAC,GFtBG,GAAG,KEsBK,CAAC,CAAC,EFtBtB,AEsBwB,CAA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","file":"script.221c08a2.js","sourceRoot":"..\\src","sourcesContent":["export interface Ship {\r\n  length: number;\r\n  impacts: number;\r\n  sunk: boolean;\r\n  position: [number, number][] | null;\r\n  hit(): void;\r\n  isSunk(): void;\r\n}\r\n\r\nexport function createShip(size: number): Ship {\r\n  return {\r\n    length: size,\r\n    impacts: 0,\r\n    sunk: false,\r\n    position: null,\r\n    hit() {\r\n      this.impacts++;\r\n    },\r\n    isSunk() {\r\n      if (this.impacts >= this.length) {\r\n        this.sunk = true;\r\n      }\r\n    },\r\n  };\r\n}\r\n","import { createShip, Ship } from \"../src/ship\";\r\n\r\nexport type Cell = {\r\n  occupied: boolean;\r\n  hit: boolean;\r\n  ship: Ship | null;\r\n};\r\n\r\nexport interface Gameboard {\r\n  size: number;\r\n  grid: Cell[][];\r\n  createShips(\r\n    gameboardX: number,\r\n    gameboardY: number,\r\n    shipSize: number,\r\n    orientation: \"horizontal\" | \"vertical\"\r\n  ): Ship | null;\r\n  createAllShips(): void;\r\n  receiveAttack(gameboardX: number, gameboardY: number): void;\r\n  missedAttacks: [number, number][];\r\n  allShipsSunk(): boolean;\r\n  getMissedShots: () => number[][];\r\n  getHitCells: () => number[][];\r\n}\r\n\r\nexport function createGameboard(size: number): Gameboard {\r\n  let gameboard: Gameboard = {\r\n    size: size,\r\n    grid: Array.from({ length: size }, () =>\r\n      Array.from({ length: size }, () => ({\r\n        occupied: false,\r\n        hit: false,\r\n        ship: null,\r\n      }))\r\n    ),\r\n    createShips(\r\n      gameboardX: number,\r\n      gameboardY: number,\r\n      shipSize: number,\r\n      orientation: \"horizontal\" | \"vertical\"\r\n    ): Ship | null {\r\n      let ship = createShip(shipSize);\r\n      ship.position = [];\r\n\r\n      for (let i = 0; i < shipSize; i++) {\r\n        let x = gameboardX + (orientation === \"horizontal\" ? i : 0);\r\n        let y = gameboardY + (orientation === \"vertical\" ? i : 0);\r\n\r\n        if (x >= size || y >= size || gameboard.grid[x][y].occupied) {\r\n          return null;\r\n        }\r\n        ship.position.push([x, y]);\r\n      }\r\n\r\n      for (let [x, y] of ship.position) {\r\n        gameboard.grid[x][y].ship = ship;\r\n        gameboard.grid[x][y].occupied = true;\r\n      }\r\n\r\n      return ship;\r\n    },\r\n    createAllShips(): void {\r\n      const shipSizesArr = [6, 5, 4, 3, 2];\r\n\r\n      for (let size of shipSizesArr) {\r\n        let ship: Ship | null = null;\r\n        while (ship === null) {\r\n          const orientation = Math.random() < 0.5 ? \"horizontal\" : \"vertical\";\r\n          const gameboardX = Math.floor(Math.random() * this.size);\r\n          const gameboardY = Math.floor(Math.random() * this.size);\r\n\r\n          ship = this.createShips(gameboardX, gameboardY, size, orientation);\r\n        }\r\n      }\r\n    },\r\n    receiveAttack(gameboardX: number, gameboardY: number): void {\r\n      if (gameboard.grid[gameboardX][gameboardY].occupied) {\r\n        gameboard.grid[gameboardX][gameboardY].hit = true;\r\n        gameboard.grid[gameboardX][gameboardY].ship?.hit();\r\n      } else {\r\n        gameboard.missedAttacks.push([gameboardX, gameboardY]);\r\n      }\r\n    },\r\n    missedAttacks: [],\r\n    allShipsSunk() {\r\n      for (let i = 0; i < this.grid.length; i++) {\r\n        for (let j = 0; j < this.grid.length; j++) {\r\n          if (this.grid[i][j].occupied) {\r\n            this.grid[i][j].ship?.isSunk();\r\n            if (!this.grid[i][j].ship?.sunk) {\r\n              return false;\r\n            } else {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    getMissedShots: function () {\r\n      return this.missedAttacks;\r\n    },\r\n    getHitCells: function () {\r\n      const hitCells: number[][] = [];\r\n      for (let i = 0; i < this.size; i++) {\r\n        for (let j = 0; j < this.size; j++) {\r\n          if (this.grid[i][j].hit) {\r\n            hitCells.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n      return hitCells;\r\n    },\r\n  };\r\n  return gameboard;\r\n}\r\n","import { createGameboard, Gameboard } from \"../src/gameboard\";\r\n\r\nexport interface Player {\r\n  isHuman: boolean;\r\n  gameboard: Gameboard;\r\n  name: \"Player 1\" | \"Player 2\";\r\n  isMyTurn: boolean;\r\n  makeHumanMove: (x: number, y: number, opponent: Player) => void;\r\n  makeComputerMove: (opponent: Player) => void;\r\n  makeRandomMove: (opponent: Player) => void;\r\n  toggleTurn: () => void;\r\n  isHardDifficulty: boolean;\r\n}\r\n\r\nexport function createPlayer(\r\n  isHuman: boolean,\r\n  isHardDifficulty: boolean\r\n): Player {\r\n  return {\r\n    isHuman: isHuman,\r\n    gameboard: createGameboard(10),\r\n    name: isHuman ? \"Player 1\" : \"Player 2\",\r\n    isMyTurn: isHuman,\r\n    isHardDifficulty: isHardDifficulty,\r\n    makeHumanMove: function (x: number = 0, y: number = 0, opponent: Player) {\r\n      console.log(x);\r\n      console.log(y);\r\n      opponent.gameboard.receiveAttack(x, y);\r\n    },\r\n\r\n    toggleTurn: function () {\r\n      this.isMyTurn = !this.isMyTurn;\r\n    },\r\n    makeComputerMove: function (opponent: Player) {\r\n      if (!this.isHuman) {\r\n        if (this.isHardDifficulty) {\r\n          let hitCells = opponent.gameboard.getHitCells();\r\n          if (hitCells.length > 0) {\r\n            let adjacentMoveModifiers: number[][] = [\r\n              [0, 1],\r\n              [1, 0],\r\n              [-1, 0],\r\n              [0, -1],\r\n            ];\r\n\r\n            let shuffleArray = function (array: any[]) {\r\n              for (let i = array.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [array[i], array[j]] = [array[j], array[i]];\r\n              }\r\n            };\r\n\r\n            shuffleArray(adjacentMoveModifiers);\r\n\r\n            let lastHitCell = hitCells[hitCells.length - 1];\r\n            let validMoveFound = false;\r\n            while (!validMoveFound && adjacentMoveModifiers.length > 0) {\r\n              let modifier = adjacentMoveModifiers.pop();\r\n              if (modifier) {\r\n                let x = lastHitCell[0] + modifier[0];\r\n                let y = lastHitCell[1] + modifier[1];\r\n                if (\r\n                  x >= 0 &&\r\n                  x < opponent.gameboard.size &&\r\n                  y >= 0 &&\r\n                  y < opponent.gameboard.size &&\r\n                  !opponent.gameboard\r\n                    .getMissedShots()\r\n                    .some((shot) => shot[0] === x && shot[1] === y) &&\r\n                  !opponent.gameboard\r\n                    .getHitCells()\r\n                    .some((hit) => hit[0] === x && hit[1] === y)\r\n                ) {\r\n                  opponent.gameboard.receiveAttack(x, y);\r\n                  validMoveFound = true;\r\n                }\r\n              }\r\n            }\r\n            if (!validMoveFound) {\r\n              this.makeRandomMove(opponent);\r\n            }\r\n          } else {\r\n            this.makeRandomMove(opponent);\r\n          }\r\n        }\r\n        console.log(\"Computer made a move\");\r\n      }\r\n    },\r\n    makeRandomMove: function (opponent: Player) {\r\n      let validRandomMove = false;\r\n      let x: number = 0;\r\n      let y: number = 0;\r\n      while (!validRandomMove) {\r\n        x = Math.floor(Math.random() * opponent.gameboard.size);\r\n        y = Math.floor(Math.random() * opponent.gameboard.size);\r\n\r\n        const missedShots = opponent.gameboard.getMissedShots();\r\n        const hitCells = opponent.gameboard.getHitCells();\r\n        if (\r\n          !missedShots.some((shot) => shot[0] === x && shot[1] == y) &&\r\n          !hitCells.some((cell) => cell[0] === x && cell[1] === y)\r\n        ) {\r\n          validRandomMove = true;\r\n        }\r\n      }\r\n      opponent.gameboard.receiveAttack(x, y);\r\n    },\r\n  };\r\n}\r\n","import { createGameboard } from \"../src/gameboard\";\r\nimport { createPlayer, Player } from \"../src/player\";\r\n\r\nexport interface Gameloop {\r\n  gameStarted: boolean;\r\n  isGameStarted: () => boolean;\r\n  startGame: () => void;\r\n  humanPlayer: Player;\r\n  compPlayer: Player;\r\n  manageTurns: (x?: number, y?: number) => void;\r\n  checkEndOfGame: () => void;\r\n  gameOver: boolean;\r\n}\r\n\r\nexport function createGameLoop(): Gameloop {\r\n  let gameLoop: Gameloop = {\r\n    gameStarted: false,\r\n    isGameStarted: function () {\r\n      return this.gameStarted;\r\n    },\r\n    humanPlayer: createPlayer(true),\r\n    compPlayer: createPlayer(false),\r\n    startGame: function () {\r\n      this.gameStarted = true;\r\n      this.humanPlayer.gameboard = createGameboard(10);\r\n      this.humanPlayer.gameboard.createAllShips();\r\n\r\n      this.compPlayer.gameboard = createGameboard(10);\r\n      this.compPlayer.gameboard.createAllShips();\r\n      this.manageTurns();\r\n    },\r\n    manageTurns: function (x?: number, y?: number) {\r\n      if (this.gameOver) {\r\n        return;\r\n      }\r\n      if (this.humanPlayer.isMyTurn) {\r\n        console.log(\"Human players Turn\");\r\n        if (x !== undefined && y !== undefined) {\r\n          this.humanPlayer.makeHumanMove(x, y, this.compPlayer);\r\n          this.checkEndOfGame();\r\n          if (!this.gameOver) {\r\n            this.humanPlayer.toggleTurn();\r\n            this.compPlayer.toggleTurn();\r\n\r\n            if (this.compPlayer.isMyTurn) {\r\n              this.compPlayer.makeComputerMove(this.humanPlayer);\r\n              this.checkEndOfGame();\r\n              if (!this.gameOver) {\r\n                this.humanPlayer.toggleTurn();\r\n                this.compPlayer.toggleTurn();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    checkEndOfGame: function () {\r\n      if (this.compPlayer.gameboard.allShipsSunk()) {\r\n        console.log(\"Congratulations! You have won!\");\r\n        this.gameOver = true;\r\n      } else if (this.humanPlayer.gameboard.allShipsSunk()) {\r\n        console.log(\"Game Over, you lost...\");\r\n        this.gameOver = true;\r\n      }\r\n    },\r\n    gameOver: false,\r\n  };\r\n  return gameLoop;\r\n}\r\n","import { createGameLoop } from \"../src/gameLoop\";\r\nimport { Gameboard } from \"./gameboard\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const startGameBtn = document.querySelector(\"#startBtn\");\r\n  const difficultySelector = document.querySelector(\r\n    \"#difficulty\"\r\n  ) as HTMLSelectElement;\r\n  const opponentBoard = document.querySelector(\".opponentBoard\");\r\n  const playersBoard = document.querySelector(\".playersBoard\");\r\n\r\n  const gameLoop = createGameLoop();\r\n\r\n  if (opponentBoard instanceof HTMLElement) {\r\n    createGrid(gameLoop.humanPlayer.gameboard, opponentBoard, \"opponentBoard\");\r\n  } else {\r\n    console.error(\"Opponent board not found\");\r\n  }\r\n  if (playersBoard instanceof HTMLElement) {\r\n    createGrid(gameLoop.humanPlayer.gameboard, playersBoard, \"playersBoard\");\r\n  } else {\r\n    console.error(\"Players board not found\");\r\n  }\r\n\r\n  if (startGameBtn && difficultySelector) {\r\n    startGameBtn.addEventListener(\"click\", () => {\r\n      difficultySelector.disabled = true;\r\n      gameLoop.startGame();\r\n      if (playersBoard instanceof HTMLElement) {\r\n        createGrid(\r\n          gameLoop.humanPlayer.gameboard,\r\n          playersBoard,\r\n          \"playersBoard\"\r\n        );\r\n      }\r\n      gameLoop.manageTurns();\r\n    });\r\n  } else {\r\n    console.error(\"Start Game button or difficulty selector not found\");\r\n  }\r\n\r\n  function createGrid(\r\n    gameboard: Gameboard,\r\n    htmlGrid: HTMLElement,\r\n    boardClass: string\r\n  ) {\r\n    htmlGrid.innerHTML = \"\";\r\n    htmlGrid.style.gridTemplateColumns = `repeat(${gameboard.size}, 1fr)`;\r\n    htmlGrid.style.gridTemplateRows = `repeat(${gameboard.size}, 1fr)`;\r\n    const root = document.documentElement;\r\n    root.style.setProperty(\"--num\", gameboard.size.toString());\r\n    for (let i = 0; i < gameboard.size; i++) {\r\n      for (let j = 0; j < gameboard.size; j++) {\r\n        const cell = document.createElement(\"div\");\r\n        cell.classList.add(\"cell\");\r\n        cell.dataset.x = i.toString();\r\n        cell.dataset.y = j.toString();\r\n        if (boardClass === \"opponentBoard\") {\r\n          cell.addEventListener(\"click\", (event) => {\r\n            if (!gameLoop.isGameStarted()) {\r\n              alert(\"Please click the Start Game button before making a move.\");\r\n              event.preventDefault();\r\n            } else {\r\n              const target = event.target as HTMLElement;\r\n              if (target.dataset.x && target.dataset.y) {\r\n                const x = parseInt(target.dataset.x, 10);\r\n                const y = parseInt(target.dataset.y, 10);\r\n                gameLoop.manageTurns(x, y);\r\n                updateMoveLists();\r\n              } else {\r\n                console.error(\"Data attributes x and y are not set\");\r\n              }\r\n            }\r\n          });\r\n        }\r\n        htmlGrid.appendChild(cell);\r\n      }\r\n    }\r\n    if (boardClass === \"playersBoard\") {\r\n      updateShipCells(\"playersBoard\", gameLoop.humanPlayer.gameboard);\r\n    }\r\n  }\r\n\r\n  function updateElementTextContent(elementId: string, moves: number[][]) {\r\n    const element = document.getElementById(elementId);\r\n    if (element) {\r\n      element.textContent = moves\r\n        .map((move) => `(${move[0]}, ${move[1]})`)\r\n        .join(\", \");\r\n    }\r\n  }\r\n\r\n  function updateShipCells(boardClass: string, gameboard: Gameboard) {\r\n    for (let x = 0; x < gameboard.size; x++) {\r\n      for (let y = 0; y < gameboard.size; y++) {\r\n        if (gameboard.grid[x][y].ship !== null) {\r\n          const cell = document.querySelector(\r\n            `.${boardClass} .cell[data-x=\"${x}\"][data-y=\"${y}\"]`\r\n          );\r\n          if (cell) {\r\n            cell.classList.add(\"ship\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateCellClasses(\r\n    boardClass: string,\r\n    moves: number[][],\r\n    className: string\r\n  ) {\r\n    moves.forEach((move) => {\r\n      const cell = document.querySelector(\r\n        `.${boardClass} .cell[data-x='${move[0]}'][data-y='${move[1]}']`\r\n      );\r\n      if (cell) {\r\n        cell.classList.add(className);\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateMoveLists() {\r\n    updateElementTextContent(\r\n      \"humanMissedAttacks\",\r\n      gameLoop.humanPlayer.gameboard.missedAttacks\r\n    );\r\n    updateElementTextContent(\r\n      \"computerMissedAttacks\",\r\n      gameLoop.compPlayer.gameboard.missedAttacks\r\n    );\r\n    updateElementTextContent(\r\n      \"humanHitCells\",\r\n      gameLoop.humanPlayer.gameboard.getHitCells()\r\n    );\r\n    updateElementTextContent(\r\n      \"computerHitCells\",\r\n      gameLoop.compPlayer.gameboard.getHitCells()\r\n    );\r\n\r\n    updateCellClasses(\r\n      \"opponentBoard\",\r\n      gameLoop.compPlayer.gameboard.missedAttacks,\r\n      \"missedAttacks\"\r\n    );\r\n    updateCellClasses(\r\n      \"playersBoard\",\r\n      gameLoop.humanPlayer.gameboard.missedAttacks,\r\n      \"missedAttacks\"\r\n    );\r\n    updateCellClasses(\r\n      \"opponentBoard\",\r\n      gameLoop.compPlayer.gameboard.getHitCells(),\r\n      \"hits\"\r\n    );\r\n    updateCellClasses(\r\n      \"playersBoard\",\r\n      gameLoop.humanPlayer.gameboard.getHitCells(),\r\n      \"hits\"\r\n    );\r\n  }\r\n});\r\n"]}