{"version":3,"sources":["ship.ts","gameboard.ts","player.ts","gameLoop.ts","script.ts"],"names":[],"mappings":";;;;;AIAA,IAAA,UAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;ADAA,ACGA,AJMA,IGTA,ICGQ,CAAC,AJMO,MGThB,GAAA,CHS0B,CAAC,IAAY,CGTvC,ACGyB,CDHzB,ACG0B,AJMa,kBGTvC,ACG4C,CDH5C,CCG8C,YAAA;ADF9C,ECGE,AJMA,EGTF,ECGQ,GJMC,GGTT,GAAA,GCGoB,GAAG,CDHvB,CAAA,MCG+B,CAAC,QDHhC,CAAA,ICG6C,CAAC,WAAW,CAAC;ADW1D,ECVE,EJME,EINI,GDUQ,CHJN,EAAE,IAAI,OGIc,CAAC,ACVL,GAAG,QAAQ,CAAC,IDUkB,EAAA,OCVL,CAC/C,aAAa,CACO;EDStB,ACRA,EJIE,EGIE,ACRE,KJIG,EAAE,CGIC,AHJA,GGIa,ECRN,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC;EAC9D,EDQE,AHJA,EIJI,EJIA,EAAE,KGIK,AHJA,EGIE,CCRG,GAAG,CDQD,OCRS,CAAC,aAAa,CAAC,eAAe,CAAC;EAE5D,EDOE,AHJA,EIHE,MJGM,EIHE,AJGA,GGIG,ACPA,CAAA,AJGC,CGIC,ACPF,EAAA,ODOE,GCPF,CAAA,UDOY,ICPE,EAAC,KAAK,CAAC,IDOgB,EAAA;ECLpD,EJEE,EGIE,ACNA,CJEC,EAAA,CGIG,CAAC,OHJJ,CIFY,GDMG,AHJf,CGIgB,CHJhB,OIFwB,QDMQ,GAAG,ACNA,EAAE,cDMc;ICLtD,EDME,AHJA,IGII,AHJA,CGIC,AHJA,GIFG,CAAC,GJEG,EAAE,CGIC,CAAC,CCNC,CAAC,WAAW,CAAC,EDME,GAAG,ICNI,EAAE,UDMU,GCNG,EAAE,eAAe,CAAC;EAC5E,CAAC,CDMC,AHJA,CGIC,AHJA,IIFI;IDOL,ACNA,AJEA,MAAM,CIFC,CAAC,AJEF,KGIO,ACNA,CAAC,CDMC,EHJT,OGIS,AHJT,EAAA,YGIS,EAAA,ACNyB,CAAC;EAC3C,IDMI,AHJA,IAAI,GGIG,CHJC,CAAC,EGIE,CAAC,IHJI,IAAI,GGIG,CHJC,CAAC,MAAM,EAAE;EIDrC,EDME,CAAC,CCNC,EJEE,IAAI,CAAC,IAAI,CIFC,EJEE,IAAI,MIFM,WAAW,EAAE;IDOvC,ACNA,EJEE,QIFQ,CDMC,ACNA,EDME,CAAA,CAAA,EAAA,ECNM,CAAC,KDMP,CAAA,KCNkB,CAAC,MDMP,EAAC,CCNe,EAAE,CDMb,EAAE,SCNuB,EAAE,KDMT,CAAC,QCNsB,CAAC;EAC1E,CAAC,CDMC,AHJA,KIFK,KDMK,EAAE,CAAA,CAAA,EAAA,QAAA,CAAA,YAAY,EAAC,KAAK,EAAE,gBAAgB,CAAC;GHHlD,CGIC,ACNA,OAAO,CAAC,CDMC,EAAE,ECNE,CAAC,MDMH,UAAA,EAAA,OCN4B,CAAC;AJG5C,EIFE,IDMI,IAAI,CAAC,WAAW,GAAG,IAAI;AHnB7B,EIeE,IDKI,ACLA,CJfN,CAAA,EGoBU,CAAC,OCLO,AJflB,GAAA,CGoBsB,ACLA,CDKC,QHpBvB,CGoBgC,GAAG,CAAA,CAAA,EAAA,CCLK,EAAE,QDKP,CAAA,eAAe,EAAC,EAAE,CAAC;ICJlD,EDKE,IAAI,CAAC,KCLK,CAAC,KDKK,CAAC,SAAS,CAAC,ACLA,CAAC,OAAO,EAAE,IDKI,CAAA,CAAE,MCLN;MDOrC,ACNA,IDMI,CAAC,UAAU,CAAC,ECNE,CAAC,MDMM,ECNE,CDMC,CAAA,CAAA,ACNE,EDMF,ECNM,SDMN,CAAA,eAAe,EAAC,EAAE,CAAC;MAC/C,ACNA,IDMI,ACNA,CDMC,UAAU,CAAC,ICNI,GAAG,EDME,CAAC,cAAc,CAAA,ACNC,CDMC,ACNA,KAAK,KAAK,MAAM;MDO1D,ACNA,IDMI,CAAC,GCNG,GAAG,CAAA,CAAA,EAAA,CDMK,CAAA,CAAE,OCNP,CAAA,cAAc,EAAC,gBAAgB,CAAC;IDO7C,CAAC,CCNC,QAAQ,CAAC,SAAS,CAAA,CAAE;AF7B1B,ICoCI,ADpCJ,EE8BM,SDMS,ADpCf,ECoCiB,CDpCjB,OAAA,CCoCiB,ADpCjB,YCoC2B,CAAU,EAAE,CAAU,EAAA,ADpCjD,CAAA;AAcA,MCuBM,ACNA,GFjBU,CCuBN,IAAI,CAAC,MDvBa,CAC1B,CCsBqB,EAAE,IDtBP,EAChB,gBAAyB,EAAA;EAEzB,IEcI,EDME,CDpBC;IACL,ECoBE,ACNA,KFdK,EAAE,OAAO;IAChB,ECoBE,ACNA,IDMI,GDpBG,CCoBC,CAAC,ADpBA,CAAA,CAAA,EAAA,OCoBW,CAAC,GDpBZ,CAAA,ICoBoB,EAAE,SDpBP,EAAC,EAAE,CAAC;IAC9B,EEcE,EDME,ADpBA,EAAE,KCoBK,CAAC,CDpBC,ECoBE,CAAC,ADpBA,UAAU,GAAG,OCoBO,CAAC,EDpBE;IACvC,EEcE,EDME,IAAI,ADpBA,CCoBC,CDpBC,ICoBI,GDpBG,MCoBM,IAAI,CAAC,KAAK,SAAS,EAAE;IDnB5C,EEeE,IDKI,ACLA,IDKI,CAAC,KDpBK,EAAE,CEeC,GDKG,CAAC,QCLQ,GFfG,ECoBE,CAAC,CAAC,EAAE,CAAC,CCLC,CDKC,CCLC,GDKG,CAAC,UAAU,CAAC;IDnB3D,IEeI,EDKE,IAAI,CAAC,EDpBE,CEeC,CFfC,AEgBT,QAAQ,CFhBC,AEgBA,CDIU,CAAA,CAAE,QCJD,CAAC,EFhBF,CAAa,EAAE,CAAa,EAAE,CEgBnB,EAC9B,KFjBiE,EAAA,MEiBpD,EACb,eAAe,CAChB;MFnBoB,AEoBvB,CAAC,GDCG,ADrBmB,CAAA,EEoBhB,CDCC,CAAC,CDrBc,GCqBV,CAAC,CDrBS,CAAA,EAAA,ICqBD,EAAE;QDrBD,AEqBrB,CFrBqB,GCsBjB,ADtBiB,CAAa,EEqB3B,CDCC,ACDA,CDCC,ICDI,CAAC,MDCM,CAAC,UAAU,CAAA,CAAE,OCDO,CAAC;MFrBP,AEsBpC,MDCM,IAAI,CAAC,UAAU,CAAC,UAAU,CAAA,CAAE;MDvBI,AEuBtC,IFvBsC,AEuBlC,CFvBkC,CCyBhC,IAAI,ADzB4B,ICyBxB,CAAC,ADzBuB,CAAA,AEuBtB,EFvBsB,OCyBb,CAAC,ECFE,MDEM,EAAE,GCFG,EAAE;QFvBH,AEwBpC,CFxBoC,GAAA,CAAa,CC0B3C,IAAI,ACFA,CDEC,ACDT,QAAQ,CAAC,CDCU,CAAC,SCDA,CAAC,MDCe,CAAC,ECDP,EDCW,ACAzC,CDA0C,WAAW,ACAzC,CDA0C,CCCtD,cAAc,CACf;MF5BgD,AE6BnD,CAAC,MAAM,CDFC,IAAI,CAAC,cAAc,CAAA,CAAE;MD1B7B,EE6BE,KF7BK,CC2BC,AD3BA,CE6BC,CAAC,CF7BC,CC2BC,AD3BA,CC2BC,AD3BA,CAAC,CE6BC,CAAC,CDFC,CAAC,QAAQ,EAAE,aCEa,CAAC;AHtDhD,IAAA,EC0BM,AE6BA,IHvDN,GAAA,AC0Ba,CAAC,EC2BE,CD3BC,CAAC,CAAC,CC2BC,AFrDpB,AC0BoB,CC2BC,AFrDrB,WEqDgC,CAAC,CFrDjC,CAAA,QEqD2C,CAAA,CAAE;AF5B7C,MCEM,AE8BA,GHhCU,KCEF,AE8BA,CF9BC,AE8BA,CDHC,IAAI,CAAC,GF7BU,ACEP,CDFQ,ACEP,CE8BC,CAAA,CAAE,CHhCgB,EE6Bb,AF7Ba,CE6BZ,MD3BM,CAAC,CAAC,EC2BE,AD3BA,CC2BA,AD3BC,CC2BC,AD3BA;EDD1C,ECEE,AE8BA,CF9BC,AE8BA,CHhCC,AGgCA,QDHQ,CF7BC,GAAc;EGiC3B,CAAC,CHhCC,ACGA,IDHI,CGgCC,CHhCC,EE6BE,EF7BE,ACGA,EAAE,SAAA,WAAA,EAAA;IDFZ,AGgCA,EF7BE,EDHE,EE6BE,AF7BA,ACGA,CAAC,AE6BA,CAAC,GHhCG,CAAC,CGgCC,CAAC,CF7BC,CDHC,CAAC,CCGC,CAAC,IAAI,CAAC,QAAQ,kCE6BkC,CAAC;EACrE,EF7BE,CAAC,CDJkB,EE8Bf,IF9BqB,EAAE;EGmC7B,EHnCiC,ACK/B,CDLiC,CE+B/B,CF/BiC,IGmC5B,QHnC4B,CCKnB,CE8BC,CF9BC,AE+BlB,SF/BkB,AE+BE,EACpB,QAAqB,EACrB,KFjC4B,KEiCV,EAAA,CFjC0B,EAAA;IC2B5C,ACQA,CDRC,CF/BC,ACKA,IAAI,CAAC,CEkCC,CHvCN,AGuCO,EFlCE,CAAC,EDLL,CAAC,GGuCU,CHvCN,ACKO,CDLN,CCKQ,AEkCA,EAAE;IDPvB,ACQA,IHxCe,ACMX,IAAI,AEkCA,CAAC,CHxCY,EAAE,ACMX,CAAC,CC0BC,ACQA,CAAC,CDRC,SAAA,ID1Ba,EAAE,GEkCG,GAAG,GDRrB,EAAA,ICQqB,CAAA,MAAA,CAAU,SAAS,CAAC,IAAI,EAAA,QAAA,CAAQ;IACrE,EDRE,AFjCyB,CAAE,EAAE,CEiCzB,AD1BA,EEkCE,CAAC,CDRC,AD1BA,CC0BC,GCQG,CAAC,EHzCgB,CCOb,GC0BG,AD1BA,CC0BC,OD1BO,CAAC,CC0BC,ACQA,CDRC,ECQE,KFlCK,CAAC,GEkCN,CDRU,ACQV,CDRU,CAAE,EAAE,ECQd,CFlCiB,AEkCP,CFlCO,CAAE,OEkCA,CAAC,IAAI,EAAA,QAAA,CAAQ;IAClE,IDRI,AFlCiC,AG0C/B,EFlCA,EEkCI,EFlCA,CC0BC,AFlC2B,AG0CzB,CDRD,GAAG,CAAC,ED1BE,CAAC,AEkCE,CAAC,KFlCG,GAAG,CAAC,EAAE,IEkCM,aDRW,CAAC;ICSjD,IDRI,ACQA,CAAC,CH1CD,EEkCI,AD1BA,CC0BC,CCQC,CAAC,CFlCC,EDRA,EAAE,CEkCG,GAAG,CFlCD,CG0CG,CAAC,CDRC,MCQM,EAAE,CFlCC,GAAe,CACtC,CAAC,CAAC,EAAE,AEiC2B,CFjC1B,AEiC2B,CFjC1B,EACN,CAAC,AEgCmC,CFhClC,AEgCmC,EFhCjC,CAAC,CAAC,EACN,CAAC,CAAC,AE+B2C,CF/B1C,AE+B0C,CAAE,CF/B1C,AE+B2C,CF/B1C,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACR;IE8BT,EDRE,CAAC,ECQE,CH1CD,ECcI,CCoBC,AFlCF,AG0CE,CAAC,CH1CD,CCcG,CCoBC,ACQA,CAAC,EH1CA,AG0CE,CDRC,ACQA,CDRC,ECQE,IF5BI,GAAG,ECoBE,ACQA,CDRC,ACQA,IAAI,EF5BtB,AE4BwB,CAAC,EDRE,ACQA,CDRC,CCQC,OF5BjB,CAAa,GCoBe,CAAA,CAAE,ADpBL,ECoBO,ADpBP;ME6B/C,EDRE,EFlCA,CG0CG,GH1CC,CEkCG,ACQA,CDRC,AFlCF,AG0CE,GDRG,ACQA,CDRC,ACQA,EAAE,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,CDRC,CAAC,ACQA,EAAE;QDPvC,ACQA,CH1CD,GEkCK,ACQE,CDRD,CDrBC,EE6BI,GF7BC,AE6BE,EDRA,EDrBE,CCqBC,ADrBA,GAAG,AE6BE,CDRD,ACQE,IF7BE,CAAC,MAAM,EE6BI,CF7BD,AE6BE,CF7BD,EAAE,CAAC,CE6BG,CAAC,CF7BD,CAAC,EAAE,CAAC,EAAE,EAAE;MCsBnD,AFvCmC,CAIjC,CAAC,AG2CD,IAAI,CAAC,GF7BG,IAAM,CAAC,CE6BD,CAAC,CF7BG,EE6BA,CAAC,CF7BG,CAAC,IE6BE,CF7BG,AE6BF,CF7BG,IAAI,CAAC,MAAM,CAAA,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;ICsBzD,AFxCE,CEwCD,AFpCI,CACJ,EG2CG,IAAI,CAAC,GF7BG,EAAA,EE6BI,CF7BJ,AE6BK,CAAC,GAAG,CAAC,CF7BV,AE6BW,CF7BY,CAAC,KAAK,CAAC,AE6BX,CF7BY,AE6BZ,CF7Ba,AE6BX,EF7Ba,KAAK,CAAC,CAAC,CAAC,CAAC,EAAA,CAAA,CAAA,EAA1C,KAAK,CAAC,CAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,KAAK,CAAC,CAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAA;ICsB/B,AFnCA,IG2CI,IDRI,ACQA,CAAC,CDRC,ADrBA,CDdC,EAAA,GG2CK,CAAC,CAAC,GAAG,CH3CV,AG2CW,CAAC,QAAQ,CAAA,CAAE,CH1C/B,UAAkB,EAClB,UAAkB,EAClB,QAAgB,EAChB,WAAsC,EAAA;GEgCzC,KCQK,IF7BI,AE6BA,CF7BC,SE6BS,KAAK,eAAe,EAAE;EDP1C,IF/BI,GE+BG,CF/BC,AGuCA,EF5BE,EDXE,AGuCA,CAAC,EDRE,AF/BA,CAAA,CAAA,EAAA,GCWO,CAAC,EDXR,CAAA,GGuCc,CAAC,MHvCL,CGuCY,CHvCX,CGuCa,KF5BK,CAAC,CDXX,CAAC,EGuCK,KAAK,EAAA;ADP/C,MF/BM,IAAI,CAAC,CCYC,AE2BA,IF3BI,AE2BA,CAAC,EHvCE,GAAG,EAAE,CGuCC,CAAC,CF3BC,GAAG,QAAQ,CAAC,AE2BA,CAAA,CAAE,EAAE,IF3BI,CAAC,MAAM,GAAG,CAAC,CAAC;ACvC3D,MF6BM,CE7BN,CAAA,GF6BW,CCWC,EE2BE,CHtCC,CAAC,ACWA,GDXG,AGsCA,CHtCC,AGsCA,EDnEpB,AF6BsB,CAAC,EE7BvB,CF6B0B,ICWI,GAAG,CDXC,EAAE,CAAC,CCWC,CCxCtC,AF6BuC,EAAE,qCGsCqC,CAAC;QHrCvE,IAAI,CAAC,CGsCC,EHtCE,GGsCG,CAAC,MHtCM,IAAI,IGsCI,CAAA,CAAE,KHtCK,KAAK,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAI,AGsCA,CHtCC,AGsCA,CF3BC,EDXE,ECWE,CE2BC,OHtCO,ACWA,GAAG,CDXC,WAAW,KAAK,ICWI,CAAC,GAAG,CAAA,CDXE,ACWA,GDXG,CAAC,GAAG,CAAC,CAAC;QAEzD,IAAI,CAAC,CCUC,AE2BA,GHrCG,CCUC,AE2BE,GHrCC,GGqCK,CHrCD,CAAC,ACUA,CE2BG,CF3BD,EDVE,EGqCI,CAAC,CHrCD,IAAI,CGqCkB,QHrCT,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;UAC3D,IGqCI,EF3BE,CDVC,CGqCC,EF3BE,CDVC,ECUA,CE2BG,CAAC,CF3BD,ME2BQ,CAAC,CAAC,GF3BC,CAAC,AE2BE,CF3BD,CAAC,GAAG,CE2BG,CAAC,MF3BI,CAAC,AE2BE,CF3BD,AE2BE,CF3BD,AE2BE,EAAE;QHpChD,QCUQ,AE2BA,IF3BI,AE2BE,CAAC,EF3BF,CE2BK,EF3BF,ME2BU,CAAC,IF3BA,CAAC,CAAC,AE2BI,CF3BH,AE2BI,GF3BD,IE2BQ,CAAC,CAAC,EF3BF,AE2BI,CF3BH,CAAC,AE2BI,CF3BH,AE2BI;QHpChD,IAAI,CAAC,GCUG,AE2BA,IF1BE,AE0BI,CHrCD,AGqCE,CHrCD,CCWH,CE0BO,EHrCA,CAAC,ACWJ,CDXK,ACWJ,CDXK,EAAE,CAAC,ACYd,AEyBgB,CHrCD,AGqCE,CHrCD,CCYf,GAAG,CEyBmB,CAAC,MFzBZ,CAAC,AEyBkB,CAAC,CAAC,EAAE,EAAE,CAAC,EFzBhB,CAAC,IAAI,IAC3B,GAAC,IAAI,CAAC,IACN,GAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,IAC3B,CAAC,QAAQ,CAAC,SAAS,CAChB,cAAc,CAAA,CAAE,CAChB,IAAI,CAAC,UAAC,IAAI,EAAA;MDhBzB,UGqCU,EFrBoB,MEqBZ,CFrBY,AEqBX,IFrBe,CAAC,CAAC,CAAC,IEqBP,CFrBY,AEqBX,CAAC,EFrBW,AEqBT,CAAC,CAAC,EFrBW,IAA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AA,CAAA,gBAAA,CAAA,IAAA,EAAA,gBAAA,GAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAE;MC6B/B,ID7BK,AC6BD,AEyBA,CFzBC,GD7BI,AC6BO,AEyBN,CFzBO,GEyBH,EHtDD,CGsDI,EHtDJ,MGsDY,CAAC,SHtDb,CAAA,GGsD0B,CACjC,CHvDO,EGuDP,CAAA,MAAA,CAAI,UAAU,EAAA,kBAAA,CAAA,CAAA,MAAA,CAAkB,CAAC,EAAA,eAAA,CAAA,CAAA,MAAA,CAAc,CAAC,EAAA,KAAA,CAAI,CACrD;MF1BL,ID7BE,AGwDE,GF3BG,CD7BD,AC6BE,AE2BA,IHxDE,AGwDE,EAAE,CHxDY,IAAI,IC6BP,EAAE;QACvB,CAAC,CD7BD,EC6BI,AE2BA,IF3BI,AE2BA,CHxDD,AC6BE,AE2BA,IHxDE,CC6BG,CAAC,GD7BC,AGwDE,CF3BC,AE2BA,CF3BC,ED7BA,AGwDE,CAAC,CHxDD,EC6BI,CAAA,CAAE,CE2BC,CAAC,CF3BC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;QACvD,CAAC,CE2BC,EHxDA,AC6BE,ID7BI,AC6BA,CAAC,KAAK,CAAC,ID7BI,AC6BA,CAAC,ED7BE,IAAI,AC6BA,CD7BC,AC6BD,CAAE,GAAG,ED7BE,CAAA,CAAE,GAAG,CC6BC,CAAC,CD7BC,GAAG,KC6BK,CAAC,IAAI,CAAC,CD7BC,GAAG,UAAU;QC+BrE,AE0BA,IHxDE,AC8BI,ID9BE,OC8BS,GD9BC,AC8BE,GD9BC,IAAI,CAAC,AC8BE,CAAC,ID9BE,CAAC,IAAI,AC8BE,CD9BD,AC8BE,MD9BI,CAAA,CAAE,GAAG,GC8BK,CD9BD,AC8BC,CD9BA,AC8BE,ID9BE,CAAC;MGyD5D,EF1BE,ID9BE,AC8BI,ID9BE,IC8BM,GAAG,GD9BC,GAAG,EC8BI,CAAC,CD9BD,CAAC,KAAK,CAAC,CC8BG,CAAC,ED9BA,CAAC,MAAM,CAAA,CAAE,AC8BE,CAAA,CAAE,CD9BD,IAAI,CAAC,IAAI,CAAC;IGyD9D,IF1BI,ID7BE,AC8BA,CAAC,GD9BG,GAAG,IAAI,CAAC,AC8BA,CAAC,IAAI,CAAC,KD9BK,CAAC,IC8BL,IAAI,ED9BW,AC8BX,ED9Ba,UAAU,EAAE,MAAI,EAAE,WAAW,CAAC;EGwD1E,QHvDM,AC6B8B,OAAA,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;EE4BjE,MHxDI,AC4BgC,CAA6B,CAAC,CE4BzD,GF3BD,CAAC,QAAQ,CAAC,IAAI,AE2BI,CF3BH,AE4BrB,UF5BsB,AE4BJ,EAClB,EF7B0B,EAAA,CE6BT,EACjB,SAAiB,EAAA;IAEjB,KAAK,CFhC0B,AEgCzB,OFhCyB,AEgClB,CAAC,GFhCqB,CAAC,CAAC,CAAC,IEgCvB,CFhC4B,CAAC,EEgCzB,EFhC6B,AEgC7B,IFhCiC,CAAC,CAAC,CAAC,KAAK,CAAC;MEiC3D,EFjC6B,CAA8B,CAAC,AEiCtD,EFhCF,EEgCM,GAAG,QAAQ,CAAC,aAAa,CACjC,GAAA,CAAA,MAAA,CAAI,UAAU,EAAA,iBAAA,CAAA,CAAA,MAAA,CAAkB,IAAI,CAAC,CAAC,CAAC,EAAA,aAAA,CAAA,CAAA,MAAA,CAAc,IAAI,CAAC,CAAC,CAAC,EAAA,IAAA,CAAI,CACjE;MACD,IFlCI,AEkCA,IAAI,EAAE,SFlCS,GAAG,IAAI;QACxB,AEkCA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;MFjC/B,AEkCA;IACF,CAAC,CFlCC,AEkCA,QFlCQ,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;EEmC1C,EFlCE;EEoCF,CFnCC,QEmCQ,eAAe,CAAA,EAAA;AFlC1B,IEmCI,wBAAwB,CACtB,oBAAoB,EACpB,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAC7C;AFtIL,IEuII,GFvIJ,CAAA,YAAA,GAAA,KEuI4B,CACtB,MFxIN,iBEwI6B,EACvB,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAC5C;IACD,wBAAwB,CACtB,eAAe,EACf,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAA,CAAE,CAC7C;IHlFD,AGmFA,CHnFC,uBGmFuB,CACtB,kBAAkB,EAClB,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAA,CAAE,CAC5C;IHrFD,AGuFA,aHvFa,EAAA,EGuFI,CACf,MHxFW,SGwFI,EACf,GHzFY,KGyFJ,CAAC,IHzFqB,EAAE,IGyFb,CAAC,KHzF8B,EAAA,EGyFrB,CAAC,aAAa,EAC3C,eAAe,CAChB;IACD,iBAAiB,CACf,cAAc,EACd,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,EAC5C,eAAe,CAChB;IACD,EHhGE,IAAI,SAAS,CAAC,CGgGC,CACf,EHjGkB,CAAC,UAAU,CAAC,CAAC,AGiGhB,EACf,QHlGyC,AGkGjC,CHlGkC,AGkGjC,CHlGkC,QAAQ,CGkGhC,CHlGkC,AGkGjC,SAAS,CAAC,WAAW,CAAA,CAAE,EAC3C,MAAM,CACP;IACD,IHpGI,SAAS,CAAC,GGoGG,CHpGC,AGqGhB,CHrGiB,UAAU,CAAC,CAAC,CGqGf,EACd,OHtGuC,CAAC,AGsGhC,CHtGiC,AGsGhC,GHtGmC,GAAG,IAAI,CGsG/B,CAAC,SAAS,CAAC,WAAW,CAAA,CAAE,EAC5C,MAAM,CACP;EACH,MHxGM,CAAA,EAAA,GAAA,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAA,CAAE;AGyG1D,CAAC,CAAC,IHxGI,CAAC,MAAM;QACL,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;MACxD;IACF,CAAC;IACD,aAAa,EAAE,EAAE;IACjB,YAAY,EAAA,SAAA,aAAA,EAAA;;MACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UACzC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;YAC5B,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAA,CAAE;YAC9B,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAA,EAAE;cAC/B,OAAO,KAAK;YACd,CAAC,MAAM;cACL;YACF;UACF;QACF;MACF;MACA,OAAO,IAAI;IACb,CAAC;IACD,cAAc,EAAE,SAAA,eAAA,EAAA;MACd,OAAO,IAAI,CAAC,aAAa;IAC3B,CAAC;IACD,WAAW,EAAE,SAAA,YAAA,EAAA;MACX,IAAM,QAAQ,GAAe,EAAE;MAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;UAClC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;YACvB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACvB;QACF;MACF;MACA,OAAO,QAAQ;IACjB;GACD;EACD,OAAO,SAAS;AAClB;AA1FA,OAAA,CAAA,eAAA,GAAA,eAAA","file":"script.221c08a2.js","sourceRoot":"..\\src","sourcesContent":["export interface Ship {\r\n  length: number;\r\n  impacts: number;\r\n  sunk: boolean;\r\n  position: [number, number][] | null;\r\n  hit(): void;\r\n  isSunk(): void;\r\n}\r\n\r\nexport function createShip(size: number): Ship {\r\n  return {\r\n    length: size,\r\n    impacts: 0,\r\n    sunk: false,\r\n    position: null,\r\n    hit() {\r\n      this.impacts++;\r\n    },\r\n    isSunk() {\r\n      if (this.impacts >= this.length) {\r\n        this.sunk = true;\r\n      }\r\n    },\r\n  };\r\n}\r\n","import { createShip, Ship } from \"../src/ship\";\r\n\r\nexport type Cell = {\r\n  occupied: boolean;\r\n  hit: boolean;\r\n  ship: Ship | null;\r\n};\r\n\r\nexport interface Gameboard {\r\n  size: number;\r\n  grid: Cell[][];\r\n  createShips(\r\n    gameboardX: number,\r\n    gameboardY: number,\r\n    shipSize: number,\r\n    orientation: \"horizontal\" | \"vertical\"\r\n  ): Ship | null;\r\n  createAllShips(): void;\r\n  receiveAttack(gameboardX: number, gameboardY: number): void;\r\n  missedAttacks: [number, number][];\r\n  allShipsSunk(): boolean;\r\n  getMissedShots: () => number[][];\r\n  getHitCells: () => number[][];\r\n}\r\n\r\nexport function createGameboard(size: number): Gameboard {\r\n  let gameboard: Gameboard = {\r\n    size: size,\r\n    grid: Array.from({ length: size }, () =>\r\n      Array.from({ length: size }, () => ({\r\n        occupied: false,\r\n        hit: false,\r\n        ship: null,\r\n      }))\r\n    ),\r\n    createShips(\r\n      gameboardX: number,\r\n      gameboardY: number,\r\n      shipSize: number,\r\n      orientation: \"horizontal\" | \"vertical\"\r\n    ): Ship | null {\r\n      let ship = createShip(shipSize);\r\n      ship.position = [];\r\n\r\n      for (let i = 0; i < shipSize; i++) {\r\n        let x = gameboardX + (orientation === \"horizontal\" ? i : 0);\r\n        let y = gameboardY + (orientation === \"vertical\" ? i : 0);\r\n\r\n        if (x >= size || y >= size || gameboard.grid[x][y].occupied) {\r\n          return null;\r\n        }\r\n        ship.position.push([x, y]);\r\n      }\r\n\r\n      for (let [x, y] of ship.position) {\r\n        gameboard.grid[x][y].ship = ship;\r\n        gameboard.grid[x][y].occupied = true;\r\n      }\r\n\r\n      return ship;\r\n    },\r\n    createAllShips(): void {\r\n      const shipSizesArr = [6, 5, 4, 3, 2];\r\n\r\n      for (let size of shipSizesArr) {\r\n        let ship: Ship | null = null;\r\n        while (ship === null) {\r\n          const orientation = Math.random() < 0.5 ? \"horizontal\" : \"vertical\";\r\n          const gameboardX = Math.floor(Math.random() * this.size);\r\n          const gameboardY = Math.floor(Math.random() * this.size);\r\n\r\n          ship = this.createShips(gameboardX, gameboardY, size, orientation);\r\n        }\r\n      }\r\n    },\r\n    receiveAttack(gameboardX: number, gameboardY: number): void {\r\n      if (gameboard.grid[gameboardX][gameboardY].occupied) {\r\n        gameboard.grid[gameboardX][gameboardY].hit = true;\r\n        gameboard.grid[gameboardX][gameboardY].ship?.hit();\r\n      } else {\r\n        gameboard.missedAttacks.push([gameboardX, gameboardY]);\r\n      }\r\n    },\r\n    missedAttacks: [],\r\n    allShipsSunk() {\r\n      for (let i = 0; i < this.grid.length; i++) {\r\n        for (let j = 0; j < this.grid.length; j++) {\r\n          if (this.grid[i][j].occupied) {\r\n            this.grid[i][j].ship?.isSunk();\r\n            if (!this.grid[i][j].ship?.sunk) {\r\n              return false;\r\n            } else {\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    getMissedShots: function () {\r\n      return this.missedAttacks;\r\n    },\r\n    getHitCells: function () {\r\n      const hitCells: number[][] = [];\r\n      for (let i = 0; i < this.size; i++) {\r\n        for (let j = 0; j < this.size; j++) {\r\n          if (this.grid[i][j].hit) {\r\n            hitCells.push([i, j]);\r\n          }\r\n        }\r\n      }\r\n      return hitCells;\r\n    },\r\n  };\r\n  return gameboard;\r\n}\r\n","import { createGameboard, Gameboard } from \"../src/gameboard\";\r\n\r\nexport interface Player {\r\n  isHuman: boolean;\r\n  gameboard: Gameboard;\r\n  name: \"Player 1\" | \"Player 2\";\r\n  isMyTurn: boolean;\r\n  makeHumanMove: (x: number, y: number, opponent: Player) => void;\r\n  makeComputerMove: (opponent: Player) => void;\r\n  makeRandomMove: (opponent: Player) => void;\r\n  toggleTurn: () => void;\r\n  isHardDifficulty: boolean;\r\n}\r\n\r\nexport function createPlayer(\r\n  isHuman: boolean,\r\n  isHardDifficulty: boolean\r\n): Player {\r\n  return {\r\n    isHuman: isHuman,\r\n    gameboard: createGameboard(10),\r\n    name: isHuman ? \"Player 1\" : \"Player 2\",\r\n    isMyTurn: isHuman,\r\n    isHardDifficulty: isHardDifficulty,\r\n    makeHumanMove: function (x: number = 0, y: number = 0, opponent: Player) {\r\n      console.log(x);\r\n      console.log(y);\r\n      opponent.gameboard.receiveAttack(x, y);\r\n    },\r\n\r\n    toggleTurn: function () {\r\n      this.isMyTurn = !this.isMyTurn;\r\n    },\r\n    makeComputerMove: function (opponent: Player) {\r\n      if (!this.isHuman) {\r\n        if (this.isHardDifficulty) {\r\n          let hitCells = opponent.gameboard.getHitCells();\r\n          if (hitCells.length > 0) {\r\n            let adjacentMoveModifiers: number[][] = [\r\n              [0, 1],\r\n              [1, 0],\r\n              [-1, 0],\r\n              [0, -1],\r\n            ];\r\n\r\n            let shuffleArray = function (array: any[]) {\r\n              for (let i = array.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [array[i], array[j]] = [array[j], array[i]];\r\n              }\r\n            };\r\n\r\n            shuffleArray(adjacentMoveModifiers);\r\n\r\n            let lastHitCell = hitCells[hitCells.length - 1];\r\n            let validMoveFound = false;\r\n            while (!validMoveFound && adjacentMoveModifiers.length > 0) {\r\n              let modifier = adjacentMoveModifiers.pop();\r\n              if (modifier) {\r\n                let x = lastHitCell[0] + modifier[0];\r\n                let y = lastHitCell[1] + modifier[1];\r\n                if (\r\n                  x >= 0 &&\r\n                  x < opponent.gameboard.size &&\r\n                  y >= 0 &&\r\n                  y < opponent.gameboard.size &&\r\n                  !opponent.gameboard\r\n                    .getMissedShots()\r\n                    .some((shot) => shot[0] === x && shot[1] === y) &&\r\n                  !opponent.gameboard\r\n                    .getHitCells()\r\n                    .some((hit) => hit[0] === x && hit[1] === y)\r\n                ) {\r\n                  opponent.gameboard.receiveAttack(x, y);\r\n                  validMoveFound = true;\r\n                }\r\n              }\r\n            }\r\n            if (!validMoveFound) {\r\n              this.makeRandomMove(opponent);\r\n            }\r\n          } else {\r\n            this.makeRandomMove(opponent);\r\n          }\r\n        } else {\r\n          this.makeRandomMove(opponent);\r\n        }\r\n        console.log(\"Computer made a move\");\r\n      }\r\n    },\r\n    makeRandomMove: function (opponent: Player) {\r\n      let validRandomMove = false;\r\n      let x: number = 0;\r\n      let y: number = 0;\r\n      while (!validRandomMove) {\r\n        x = Math.floor(Math.random() * opponent.gameboard.size);\r\n        y = Math.floor(Math.random() * opponent.gameboard.size);\r\n\r\n        const missedShots = opponent.gameboard.getMissedShots();\r\n        const hitCells = opponent.gameboard.getHitCells();\r\n        if (\r\n          !missedShots.some((shot) => shot[0] === x && shot[1] == y) &&\r\n          !hitCells.some((cell) => cell[0] === x && cell[1] === y)\r\n        ) {\r\n          validRandomMove = true;\r\n        }\r\n      }\r\n      opponent.gameboard.receiveAttack(x, y);\r\n    },\r\n  };\r\n}\r\n","import { createGameboard } from \"../src/gameboard\";\r\nimport { createPlayer, Player } from \"../src/player\";\r\n\r\nexport interface Gameloop {\r\n  gameStarted: boolean;\r\n  setDifficulty: (isHardDifficulty: boolean) => void;\r\n  isGameStarted: () => boolean;\r\n  startGame: () => void;\r\n  humanPlayer: Player;\r\n  compPlayer: Player;\r\n  manageTurns: (x?: number, y?: number) => void;\r\n  checkEndOfGame: () => void;\r\n  gameOver: boolean;\r\n}\r\n\r\nexport function createGameLoop(isHardDifficulty: boolean): Gameloop {\r\n  let gameLoop: Gameloop = {\r\n    gameStarted: false,\r\n    setDifficulty: function (isHardDifficulty: boolean) {\r\n      this.humanPlayer.isHardDifficulty = isHardDifficulty;\r\n      this.compPlayer.isHardDifficulty = isHardDifficulty;\r\n    },\r\n    isGameStarted: function () {\r\n      return this.gameStarted;\r\n    },\r\n    humanPlayer: createPlayer(true, isHardDifficulty),\r\n    compPlayer: createPlayer(false, isHardDifficulty),\r\n    startGame: function () {\r\n      this.gameStarted = true;\r\n      this.humanPlayer.gameboard = createGameboard(10);\r\n      this.humanPlayer.gameboard.createAllShips();\r\n\r\n      this.compPlayer.gameboard = createGameboard(10);\r\n      this.compPlayer.gameboard.createAllShips();\r\n      this.manageTurns();\r\n    },\r\n    manageTurns: function (x?: number, y?: number) {\r\n      if (this.gameOver) {\r\n        return;\r\n      }\r\n      if (this.humanPlayer.isMyTurn) {\r\n        console.log(\"Human players Turn\");\r\n        if (x !== undefined && y !== undefined) {\r\n          this.humanPlayer.makeHumanMove(x, y, this.compPlayer);\r\n          this.checkEndOfGame();\r\n          if (!this.gameOver) {\r\n            this.humanPlayer.toggleTurn();\r\n            this.compPlayer.toggleTurn();\r\n\r\n            if (this.compPlayer.isMyTurn) {\r\n              this.compPlayer.makeComputerMove(this.humanPlayer);\r\n              this.checkEndOfGame();\r\n              if (!this.gameOver) {\r\n                this.humanPlayer.toggleTurn();\r\n                this.compPlayer.toggleTurn();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    checkEndOfGame: function () {\r\n      if (this.compPlayer.gameboard.allShipsSunk()) {\r\n        console.log(\"Congratulations! You have won!\");\r\n        this.gameOver = true;\r\n      } else if (this.humanPlayer.gameboard.allShipsSunk()) {\r\n        console.log(\"Game Over, you lost...\");\r\n        this.gameOver = true;\r\n      }\r\n    },\r\n    gameOver: false,\r\n  };\r\n  return gameLoop;\r\n}\r\n","import { createGameLoop } from \"../src/gameLoop\";\r\nimport { Gameboard } from \"./gameboard\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const startGameBtn = document.querySelector(\"#startBtn\");\r\n  const difficultySelector = document.querySelector(\r\n    \"#difficulty\"\r\n  ) as HTMLSelectElement;\r\n  const opponentBoard = document.querySelector(\".opponentBoard\");\r\n  const playersBoard = document.querySelector(\".playersBoard\");\r\n\r\n  let gameLoop = createGameLoop(false);\r\n\r\n  if (opponentBoard instanceof HTMLElement) {\r\n    createGrid(gameLoop.humanPlayer.gameboard, opponentBoard, \"opponentBoard\");\r\n  } else {\r\n    console.error(\"Opponent board not found\");\r\n  }\r\n  if (playersBoard instanceof HTMLElement) {\r\n    createGrid(gameLoop.humanPlayer.gameboard, playersBoard, \"playersBoard\");\r\n  } else {\r\n    console.error(\"Players board not found\");\r\n  }\r\n\r\n  if (startGameBtn && difficultySelector) {\r\n    startGameBtn.addEventListener(\"click\", () => {\r\n      difficultySelector.disabled = true;\r\n      let isHardDifficulty = difficultySelector.value === \"Hard\";\r\n      gameLoop = createGameLoop(isHardDifficulty);\r\n      gameLoop.startGame();\r\n      // if (playersBoard instanceof HTMLElement) {\r\n      //   createGrid(\r\n      //     gameLoop.humanPlayer.gameboard,\r\n      //     playersBoard,\r\n      //     \"playersBoard\"\r\n      //   );\r\n      // }\r\n\r\n      if (opponentBoard instanceof HTMLElement) {\r\n        createGrid(\r\n          gameLoop.humanPlayer.gameboard,\r\n          opponentBoard,\r\n          \"opponentBoard\"\r\n        );\r\n      } else {\r\n        console.error(\"Opponent board not found\");\r\n      }\r\n      if (playersBoard instanceof HTMLElement) {\r\n        createGrid(\r\n          gameLoop.humanPlayer.gameboard,\r\n          playersBoard,\r\n          \"playersBoard\"\r\n        );\r\n      } else {\r\n        console.error(\"Players board not found\");\r\n      }\r\n\r\n      gameLoop.manageTurns();\r\n    });\r\n  } else {\r\n    console.error(\"Start Game button or difficulty selector not found\");\r\n  }\r\n\r\n  function createGrid(\r\n    gameboard: Gameboard,\r\n    htmlGrid: HTMLElement,\r\n    boardClass: string\r\n  ) {\r\n    htmlGrid.innerHTML = \"\";\r\n    htmlGrid.style.gridTemplateColumns = `repeat(${gameboard.size}, 1fr)`;\r\n    htmlGrid.style.gridTemplateRows = `repeat(${gameboard.size}, 1fr)`;\r\n    const root = document.documentElement;\r\n    root.style.setProperty(\"--num\", gameboard.size.toString());\r\n    for (let i = 0; i < gameboard.size; i++) {\r\n      for (let j = 0; j < gameboard.size; j++) {\r\n        const cell = document.createElement(\"div\");\r\n        cell.classList.add(\"cell\");\r\n        cell.dataset.x = i.toString();\r\n        cell.dataset.y = j.toString();\r\n        if (boardClass === \"opponentBoard\") {\r\n          cell.addEventListener(\"click\", (event) => {\r\n            if (!gameLoop.isGameStarted()) {\r\n              alert(\"Please click the Start Game button before making a move.\");\r\n              event.preventDefault();\r\n            } else {\r\n              const target = event.target as HTMLElement;\r\n              if (target.dataset.x && target.dataset.y) {\r\n                const x = parseInt(target.dataset.x, 10);\r\n                const y = parseInt(target.dataset.y, 10);\r\n                gameLoop.manageTurns(x, y);\r\n                updateMoveLists();\r\n              } else {\r\n                console.error(\"Data attributes x and y are not set\");\r\n              }\r\n            }\r\n          });\r\n        }\r\n        htmlGrid.appendChild(cell);\r\n      }\r\n    }\r\n    if (boardClass === \"playersBoard\") {\r\n      updateShipCells(\"playersBoard\", gameLoop.humanPlayer.gameboard);\r\n    }\r\n  }\r\n\r\n  function updateElementTextContent(elementId: string, moves: number[][]) {\r\n    const element = document.getElementById(elementId);\r\n    if (element) {\r\n      element.textContent = moves\r\n        .map((move) => `(${move[0]}, ${move[1]})`)\r\n        .join(\", \");\r\n    }\r\n  }\r\n\r\n  function updateShipCells(boardClass: string, gameboard: Gameboard) {\r\n    for (let x = 0; x < gameboard.size; x++) {\r\n      for (let y = 0; y < gameboard.size; y++) {\r\n        if (gameboard.grid[x][y].ship !== null) {\r\n          const cell = document.querySelector(\r\n            `.${boardClass} .cell[data-x=\"${x}\"][data-y=\"${y}\"]`\r\n          );\r\n          if (cell) {\r\n            cell.classList.add(\"ship\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateCellClasses(\r\n    boardClass: string,\r\n    moves: number[][],\r\n    className: string\r\n  ) {\r\n    moves.forEach((move) => {\r\n      const cell = document.querySelector(\r\n        `.${boardClass} .cell[data-x='${move[0]}'][data-y='${move[1]}']`\r\n      );\r\n      if (cell) {\r\n        cell.classList.add(className);\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateMoveLists() {\r\n    updateElementTextContent(\r\n      \"humanMissedAttacks\",\r\n      gameLoop.humanPlayer.gameboard.missedAttacks\r\n    );\r\n    updateElementTextContent(\r\n      \"computerMissedAttacks\",\r\n      gameLoop.compPlayer.gameboard.missedAttacks\r\n    );\r\n    updateElementTextContent(\r\n      \"humanHitCells\",\r\n      gameLoop.humanPlayer.gameboard.getHitCells()\r\n    );\r\n    updateElementTextContent(\r\n      \"computerHitCells\",\r\n      gameLoop.compPlayer.gameboard.getHitCells()\r\n    );\r\n\r\n    updateCellClasses(\r\n      \"opponentBoard\",\r\n      gameLoop.compPlayer.gameboard.missedAttacks,\r\n      \"missedAttacks\"\r\n    );\r\n    updateCellClasses(\r\n      \"playersBoard\",\r\n      gameLoop.humanPlayer.gameboard.missedAttacks,\r\n      \"missedAttacks\"\r\n    );\r\n    updateCellClasses(\r\n      \"opponentBoard\",\r\n      gameLoop.compPlayer.gameboard.getHitCells(),\r\n      \"hits\"\r\n    );\r\n    updateCellClasses(\r\n      \"playersBoard\",\r\n      gameLoop.humanPlayer.gameboard.getHitCells(),\r\n      \"hits\"\r\n    );\r\n  }\r\n});\r\n"]}