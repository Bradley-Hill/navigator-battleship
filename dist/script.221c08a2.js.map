{"version":3,"sources":["ship.ts","gameboard.ts","player.ts","gameLoop.ts","script.ts"],"names":[],"mappings":";;;;;AIAA,IAAA,UAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;ADAA,ACGA,AJMA,IGTA,ICGQ,CAAC,AJMO,MGThB,GAAA,CHS0B,CAAC,IAAY,CGTvC,ACGyB,CDHzB,ACG0B,AJMa,kBGTvC,ACG4C,CDH5C,CCG8C,YAAA;ADF9C,ECGE,AJMA,EGTF,ECGQ,GJMC,GGTT,GAAA,GCGoB,GAAG,CDHvB,CAAA,MCG+B,CAAC,QDHhC,CAAA,ICG6C,CAAC,WAAW,CAAC;ADW1D,ECVE,EJME,EINI,GDUQ,CHJN,EAAE,IAAI,OGIc,CAAC,ACVL,GAAG,QAAQ,CAAC,IDUkB,EAAA,OCVL,CAC/C,aAAa,CACO;EDStB,ACRA,EJIE,EGIE,ACRE,KJIG,EAAE,CGIC,AHJA,GGIa,ECRN,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC;EAC9D,EDQE,AHJA,EIJI,EJIA,EAAE,KGIK,AHJA,EGIE,CCRG,GAAG,CDQD,OCRS,CAAC,aAAa,CAAC,eAAe,CAAC;EAE5D,EDOE,AHJA,EIHE,MJGM,EIHE,AJGA,GGIG,ACPA,CAAA,AJGC,CGIC,ACPF,EAAA,ODOE,GCPF,CAAA,UDOY,ICPE,EAAC,KAAK,CAAC,IDOgB,EAAA;ECLpD,EJEE,EGIE,ACNA,CJEC,EAAA,CGIG,CAAC,OHJJ,CIFY,GDMG,AHJf,CGIgB,CHJhB,OIFwB,QDMQ,GAAG,ACNA,EAAE,cDMc;ICLtD,EDME,AHJA,IGII,AHJA,CGIC,AHJA,GIFG,CAAC,GJEG,EAAE,CGIC,CAAC,CCNC,CAAC,WAAW,CAAC,EDME,GAAG,ICNI,EAAE,UDMU,GCNG,EAAE,eAAe,CAAC;EAC5E,CAAC,CDMC,AHJA,CGIC,AHJA,IIFI;IDOL,ACNA,AJEA,MAAM,CIFC,CAAC,AJEF,KGIO,ACNA,CAAC,CDMC,EHJT,OGIS,AHJT,EAAA,YGIS,EAAA,ACNyB,CAAC;EAC3C,IDMI,AHJA,IAAI,GGIG,CHJC,CAAC,EGIE,CAAC,IHJI,IAAI,GGIG,CHJC,CAAC,MAAM,EAAE;EIDrC,EDME,CAAC,CCNC,EJEE,IAAI,CAAC,IAAI,CIFC,EJEE,IAAI,MIFM,WAAW,EAAE;IDOvC,ACNA,EJEE,QIFQ,CDMC,ACNA,EDME,CAAA,CAAA,EAAA,ECNM,CAAC,KDMP,CAAA,KCNkB,CAAC,MDMP,EAAC,CCNe,EAAE,CDMb,EAAE,SCNuB,EAAE,KDMT,CAAC,QCNsB,CAAC;EAC1E,CAAC,CDMC,AHJA,KIFK,KDMK,EAAE,CAAA,CAAA,EAAA,QAAA,CAAA,YAAY,EAAC,KAAK,EAAE,gBAAgB,CAAC;GHHlD,CGIC,ACNA,OAAO,CAAC,CDMC,EAAE,ECNE,CAAC,MDMH,UAAA,EAAA,OCN4B,CAAC;AJG5C,EIFE,IDMI,IAAI,CAAC,WAAW,GAAG,IAAI;AHnB7B,EIeE,IDKI,ACLA,CJfN,CAAA,EGoBU,CAAC,OCLO,AJflB,GAAA,CGoBsB,ACLA,CDKC,QHpBvB,CGoBgC,GAAG,CAAA,CAAA,EAAA,CCLK,EAAE,QDKP,CAAA,eAAe,EAAC,EAAE,CAAC;ICJlD,EDKE,IAAI,CAAC,KCLK,CAAC,KDKK,CAAC,SAAS,CAAC,ACLA,CAAC,OAAO,EAAE,IDKI,CAAA,CAAE,MCLN;MDOrC,ACNA,IDMI,CAAC,UAAU,CAAC,ECNE,CAAC,MDMM,ECNE,CDMC,CAAA,CAAA,ACNE,EDMF,ECNM,SDMN,CAAA,eAAe,EAAC,EAAE,CAAC;MAC/C,ACNA,IDMI,ACNA,CDMC,UAAU,CAAC,ICNI,GAAG,EDME,CAAC,cAAc,CAAA,ACNC,CDMC,ACNA,KAAK,KAAK,MAAM;MDO1D,ACNA,IDMI,CAAC,GCNG,GAAG,CAAA,CAAA,EAAA,CDMK,CAAA,CAAE,OCNP,CAAA,cAAc,EAAC,gBAAgB,CAAC;IDO7C,CAAC,CCNC,QAAQ,CAAC,SAAS,CAAA,CAAE;AF7B1B,ICoCI,ADpCJ,EE+BM,IAAI,KDKK,ADpCf,ECoCiB,CDpCjB,KE+BuB,EF/BvB,CCoCiB,ADpCjB,SE+BmC,GDKR,CAAU,EAAE,CAAU,EAAA,ADpCjD,CAAA,CE+B8C,EAAE;AFjBhD,MCuBM,ECLE,CFlBQ,CCuBN,IAAI,CAAC,GCLG,CACR,EFnBkB,CAC1B,CCsBqB,EAAE,ECJP,CAAC,CFlBD,EAChB,QEiB4B,CAAC,OFjBJ,EAAA,AEiBa,EAC9B,aAAa,EACb,eAAe,CAChB;EFlBP,IEmBI,CAAC,CDCC,CDpBC,IEmBI;IFlBT,ECoBE,ECDE,GFnBG,EAAE,EEmBE,CAAC,IFnBI,CEmBC,CAAC,0BAA0B,CAAC;IFlB7C,ECoBE,ACDA,IDCI,GDpBG,CCoBC,CAAC,ADpBA,CAAA,CAAA,EAAA,OCoBW,CAAC,GDpBZ,CAAA,ICoBoB,EAAE,SDpBP,EAAC,EAAE,CAAC;IAC9B,EEmBE,EDCE,ADpBA,EAAE,AEmBA,EDCE,CAAC,IDpBI,CCoBC,EDpBE,EEmBE,KDCK,GDpBG,CCoBC,CAAC,CDpBC,CEmBC,GDCG,MDpBM,EEmBE,CDCC,CCDC,CDCC;IDnB5C,IEmBI,EDCE,EDpBE,ECoBE,ADpBA,CCoBC,GCDG,CACR,EFpBW,KCoBK,CAAC,ACAT,CAAC,WAAW,CDAU,ACAT,CDAU,CAAC,EAAE,CAAC,EAAE,ECAP,EDAW,ACCzC,CDD0C,UAAU,CAAC,ACCzC,EACZ,cAAc,CACf;IFtBL,EEuBE,CAAC,GDHG,GCGG,CDHC,CAAC,KDpBK,EAAE,OCoBO,CAAA,CAAE,ODpBO;IAClC,IEuBI,EDHE,IAAI,CAAC,ACGA,CAAC,CFvBC,ECoBE,ADpBA,CCoBC,CCGC,CAAC,MDHM,ADpBT,ECoBW,YDpBD,CAAa,EAAE,CAAa,CEuBV,CFvBY,AEuBX,QFvB2B,EAAA;MAA9C,AEwBvB,IFxBuB,CAAA,CCqBjB,IAAI,ADrBa,CCqBZ,IDrBY,CAAA,EAAA,ICqBD,CAAC,UAAU,CAAA,CAAE;MCKnC,EF1BuB,CAAA,GCsBjB,ADtBiB,CAAa,CE0B5B,CAAC,CDJC,CAAC,SCIS,CDJC,ACID,CDJE,ACIA,UDJU,CAAA,CAAE;ICKpC,CAAC,CF3BqC,AE2BpC,MDHM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;ECIxC,CAAC,GF5ByC,GE4BnC,CF5BmC,CAAA,GCyB9B,EDzB8B,ECyB1B,CAAC,EDzByB,CAAA,EAAA,KCyBf,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC;ICI5D,IF7BwC,CAAA,EE6BjC,CF7BiC,AE6BhC,CF7B6C,CC0B3C,GCGG,CDHC,ACGA,CDHC,cAAc,CAAA,CAAE,mCCGmC,CAAC;EACrE,IF9BuD,QC2B3C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;ECKhC,IF/BI,KE+BK,GF/BG,CAAC,CC2BC,IAAI,CAAC,ACIA,CACjB,EFhCoB,CAAC,MEgCD,CDLQ,CAAC,ACM7B,KFjCkC,CAAC,CAAC,CEiCf,CFjCiB,CC2BC,AD3BA,AEkCvC,CDPuC,AD3BC,CC2BC,QCOvB,EAAA;AH3DtB,IAAA,AC0BI,AEmCA,CFnCC,KD1BL,EG6DY,CH7DZ,AG6Da,GDRG,IAAI,AFrDpB,CEqDqB,AFrDrB,CG6DsB,GAAG,EAAE,IDRI,CAAC,EFrDhC,CAAA,OEqD0C,CAAA,CAAE;AF3B5C,ICEI,AEkCA,KHpCY,GGoCJ,CAAC,CDRC,AD1BA,EAAE,EEkCE,CAAC,KHpCY,CAAC,ACEhB,IDF4B,EAAA,KCE5B,EAAA,AEkCsB,GAAG,SAAA,CAAA,MAAA,CAAU,SAAS,CAAC,IAAI,EAAA,QAAA,CAAQ;EHnCvE,EGoCE,EHpCE,ACEA,IAAI,CAAC,CC0BC,ACQA,CAAC,EHpCE,GAAc,AGoCX,CFlCC,AEkCA,GFlCG,CAAC,IAAI,CAAC,OEkCO,CFlCC,EEkCE,SAAA,CAAA,MAAA,CAAU,SAAS,CAAC,IAAI,EAAA,QAAA,CAAQ;IHnClE,ACEA,AEkCA,CFlCC,GDFG,AGoCE,EDRA,AF5BA,EGoCI,EHpCA,CGoCG,QAAQ,CAAC,eAAe;IHnCrC,ACEA,AEkCA,IDRI,AF5BA,AGoCA,CAAC,CHpCC,IGoCI,CHpCC,AGoCA,CHpCC,IAAI,ACEA,CDFC,CCEC,IEkCI,CAAC,IFlCL,GEkCY,EAAE,SAAS,CAAC,EFlCd,EEkCkB,CAAC,KFlCH,EAAA,CEkCW,CAAA,CAAE,CAAC;IAC1D,EDRE,AF7BiB,ACGjB,GEkCG,CFlCC,CAAC,CDHkB,CGqChB,CHrCkB,AGqCjB,CFlCC,CAAC,CEkCC,CAAC,EAAE,CAAC,EFlCE,CEkCC,CFlCC,QEkCQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;IDPzC,AF9B+B,CE8B9B,AF9BgC,CGsC/B,CHtCiC,CCI/B,GEkCG,CFlCC,GEkCG,CFlCC,AEkCA,CFlCC,EDJsB,AGsCpB,CAAC,EAAE,CAAC,GAAG,OFlCO,EAAE,AEkCA,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;IDP3C,EF9BE,EGsCE,EFlCE,EEkCI,CHtCR,CCIQ,EEkCI,EDRA,AF9BP,CAAC,AGsCS,CDRD,ED1BE,CDJN,CAAC,CCIQ,EEkCI,CAAC,CDRV,ID1Ba,CAAC,OEkCS,CAAC,CFlCD,CC0BvB,AD1BwB,EC0BxB,CCQ6B,CAAC,IFlCE;MC2B9C,EF/Ba,AGuCX,EDRE,AD1BA,EEkCE,CAAC,CDRC,AF/BW,ACKX,CC0BC,CF/BY,MCKL,AEkCA,CFlCC,AEkCA,EDRE,CAAC,ACQA,CAAC,EFlCE,GAAG,CAAC,AEkCA,CAAC,CDRC,AD1BA,CC0BC,YAAY,CAAA,CAAE,EAAE;MF/BrB,CAAE,CEgCzB,ACQA,CHxC2B,GCMvB,AEkCA,CDRC,ACQA,CDRC,ED1BE,IEkCI,CHxCe,AGwCd,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAA,CFlCE,AEkCA,GFlCe,CACtC,CAAC,CAAC,EAAE,CCyB4B,ADzB3B,CCyB4B,ADzB3B,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EACP,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACR;QCsBL,AFjCiC,AGyCjC,IDRI,ADpBA,AE4BA,CDRC,ACQA,EHzC6B,CCa1B,IE4BI,CDRC,ACQA,CAAC,EDRE,CCQC,CAAC,CAAC,CDRC,ADpBA,GAAG,IE4BI,CAAA,CAAE,GF5BrB,YAAY,CAAa,KAAY,EAAA;MCqB/C,CAAC,CCQC,EHzCA,EGyCI,CDRC,IAAI,CFjCD,EAAE,CEiCG,CAAC,ACQA,GHzCC,EGyCI,MDRM,CAAC,QCQQ,CDRC,CAAC,ACQA,YDRY,CAAA,CAAE,EAAE;QACpD,EFjCA,AGyCE,GDRG,AFjCF,CEiCG,ADrBA,AE6BA,CHzCD,AGyCE,IF7BI,CDZD,GCYK,CAAC,GAAG,IE6BI,CF7BC,AE6BA,CF7BC,KCqBK,CAAC,ADrBA,AE6BA,EAAE,CF7BC,CAAC,EAAE,CAAC,GAAG,CAAC,CE6BR,C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","file":"script.221c08a2.js","sourceRoot":"../src","sourcesContent":["export interface Ship {\n  length: number;\n  impacts: number;\n  sunk: boolean;\n  position: [number, number][] | null;\n  hit(): void;\n  isSunk(): void;\n}\n\nexport function createShip(size: number): Ship {\n  return {\n    length: size,\n    impacts: 0,\n    sunk: false,\n    position: null,\n    hit() {\n      this.impacts++;\n    },\n    isSunk() {\n      if (this.impacts >= this.length) {\n        this.sunk = true;\n      }\n    },\n  };\n}\n","import { createShip, Ship } from \"../src/ship\";\n\nexport type Cell = {\n  occupied: boolean;\n  hit: boolean;\n  ship: Ship | null;\n};\n\nexport interface Gameboard {\n  size: number;\n  grid: Cell[][];\n  createShips(\n    gameboardX: number,\n    gameboardY: number,\n    shipSize: number,\n    orientation: \"horizontal\" | \"vertical\"\n  ): Ship | null;\n  createAllShips(): void;\n  receiveAttack(gameboardX: number, gameboardY: number): void;\n  missedAttacks: [number, number][];\n  hitCells: number[][];\n  allShipsSunk(): boolean;\n  getMissedShots: () => number[][];\n  getHitCells: () => number[][];\n}\n\nexport function createGameboard(size: number): Gameboard {\n  let gameboard: Gameboard = {\n    size: size,\n    grid: Array.from({ length: size }, () =>\n      Array.from({ length: size }, () => ({\n        occupied: false,\n        hit: false,\n        ship: null,\n      }))\n    ),\n    createShips(\n      gameboardX: number,\n      gameboardY: number,\n      shipSize: number,\n      orientation: \"horizontal\" | \"vertical\"\n    ): Ship | null {\n      let ship = createShip(shipSize);\n      ship.position = [];\n\n      for (let i = 0; i < shipSize; i++) {\n        let x = gameboardX + (orientation === \"horizontal\" ? i : 0);\n        let y = gameboardY + (orientation === \"vertical\" ? i : 0);\n\n        if (x >= size || y >= size || gameboard.grid[x][y].occupied) {\n          return null;\n        }\n        ship.position.push([x, y]);\n      }\n\n      for (let [x, y] of ship.position) {\n        gameboard.grid[x][y].ship = ship;\n        gameboard.grid[x][y].occupied = true;\n      }\n\n      return ship;\n    },\n    createAllShips(): void {\n      const shipSizesArr = [6, 5, 4, 3, 2];\n\n      for (let size of shipSizesArr) {\n        let ship: Ship | null = null;\n        while (ship === null) {\n          const orientation = Math.random() < 0.5 ? \"horizontal\" : \"vertical\";\n          const gameboardX = Math.floor(Math.random() * this.size);\n          const gameboardY = Math.floor(Math.random() * this.size);\n\n          ship = this.createShips(gameboardX, gameboardY, size, orientation);\n        }\n      }\n    },\n    receiveAttack(gameboardX: number, gameboardY: number): void {\n      if (gameboard.grid[gameboardX][gameboardY].occupied) {\n        gameboard.grid[gameboardX][gameboardY].hit = true;\n        gameboard.grid[gameboardX][gameboardY].ship?.hit();\n        gameboard.hitCells.push([gameboardX, gameboardY]);\n      } else {\n        gameboard.missedAttacks.push([gameboardX, gameboardY]);\n      }\n    },\n    missedAttacks: [],\n    hitCells: [],\n    allShipsSunk() {\n      for (let i = 0; i < this.grid.length; i++) {\n        for (let j = 0; j < this.grid.length; j++) {\n          if (this.grid[i][j].occupied) {\n            this.grid[i][j].ship?.isSunk();\n            if (!this.grid[i][j].ship?.sunk) {\n              return false;\n            } else {\n              continue;\n            }\n          }\n        }\n      }\n      return true;\n    },\n    getMissedShots: function () {\n      return this.missedAttacks;\n    },\n    getHitCells: function () {\n      const hitCells: number[][] = [];\n      for (let i = 0; i < this.size; i++) {\n        for (let j = 0; j < this.size; j++) {\n          if (this.grid[i][j].hit) {\n            hitCells.push([i, j]);\n          }\n        }\n      }\n      return hitCells;\n    },\n  };\n  return gameboard;\n}\n","import { createGameboard, Gameboard } from \"../src/gameboard\";\n\nexport interface Player {\n  isHuman: boolean;\n  gameboard: Gameboard;\n  name: \"Player 1\" | \"Player 2\";\n  isMyTurn: boolean;\n  makeHumanMove: (x: number, y: number, opponent: Player) => void;\n  makeComputerMove: (opponent: Player) => void;\n  makeRandomMove: (opponent: Player) => void;\n  toggleTurn: () => void;\n  isHardDifficulty: boolean;\n}\n\nexport function createPlayer(\n  isHuman: boolean,\n  isHardDifficulty: boolean\n): Player {\n  return {\n    isHuman: isHuman,\n    gameboard: createGameboard(10),\n    name: isHuman ? \"Player 1\" : \"Player 2\",\n    isMyTurn: isHuman,\n    isHardDifficulty: isHardDifficulty,\n    makeHumanMove: function (x: number = 0, y: number = 0, opponent: Player) {\n      opponent.gameboard.receiveAttack(x, y);\n    },\n\n    toggleTurn: function () {\n      this.isMyTurn = !this.isMyTurn;\n    },\n    makeComputerMove: function (opponent: Player) {\n      if (!this.isHuman) {\n        if (this.isHardDifficulty) {\n          let hitCells = opponent.gameboard.hitCells;\n          if (hitCells.length > 0) {\n            let adjacentMoveModifiers: number[][] = [\n              [0, 1],\n              [1, 0],\n              [-1, 0],\n              [0, -1],\n            ];\n\n            let shuffleArray = function (array: any[]) {\n              for (let i = array.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [array[i], array[j]] = [array[j], array[i]];\n              }\n            };\n\n            shuffleArray(adjacentMoveModifiers);\n\n            let lastHitCell = hitCells[hitCells.length - 1];\n            let validMoveFound = false;\n            while (!validMoveFound && adjacentMoveModifiers.length > 0) {\n              let modifier = adjacentMoveModifiers.pop();\n              if (modifier) {\n                let x = lastHitCell[0] + modifier[0];\n                let y = lastHitCell[1] + modifier[1];\n                if (\n                  x >= 0 &&\n                  x < opponent.gameboard.size &&\n                  y >= 0 &&\n                  y < opponent.gameboard.size &&\n                  !opponent.gameboard.missedAttacks.some(\n                    (shot) => shot[0] === x && shot[1] === y\n                  ) &&\n                  !opponent.gameboard.hitCells.some(\n                    (hit) => hit[0] === x && hit[1] === y\n                  )\n                ) {\n                  opponent.gameboard.receiveAttack(x, y);\n                  validMoveFound = true;\n                }\n              }\n            }\n            if (!validMoveFound) {\n              this.makeRandomMove(opponent);\n            }\n          } else {\n            this.makeRandomMove(opponent);\n          }\n        } else {\n          this.makeRandomMove(opponent);\n        }\n        alert(\"Computer has made an attack\");\n      }\n    },\n    makeRandomMove: function (opponent: Player) {\n      let validRandomMove = false;\n      let x: number = 0;\n      let y: number = 0;\n      while (!validRandomMove) {\n        x = Math.floor(Math.random() * opponent.gameboard.size);\n        y = Math.floor(Math.random() * opponent.gameboard.size);\n\n        const missedShots = opponent.gameboard.getMissedShots();\n        const hitCells = opponent.gameboard.getHitCells();\n        if (\n          !missedShots.some((shot) => shot[0] === x && shot[1] == y) &&\n          !hitCells.some((cell) => cell[0] === x && cell[1] === y)\n        ) {\n          validRandomMove = true;\n        }\n      }\n      opponent.gameboard.receiveAttack(x, y);\n    },\n  };\n}\n","import { createGameboard } from \"../src/gameboard\";\nimport { createPlayer, Player } from \"../src/player\";\n\nexport interface Gameloop {\n  gameStarted: boolean;\n  setDifficulty: (isHardDifficulty: boolean) => void;\n  isGameStarted: () => boolean;\n  startGame: () => void;\n  humanPlayer: Player;\n  compPlayer: Player;\n  manageTurns: (x?: number, y?: number) => void;\n  checkEndOfGame: () => void;\n  gameOver: boolean;\n}\n\nexport function createGameLoop(isHardDifficulty: boolean): Gameloop {\n  let gameLoop: Gameloop = {\n    gameStarted: false,\n    setDifficulty: function (isHardDifficulty: boolean) {\n      this.humanPlayer.isHardDifficulty = isHardDifficulty;\n      this.compPlayer.isHardDifficulty = isHardDifficulty;\n    },\n    isGameStarted: function () {\n      return this.gameStarted;\n    },\n    humanPlayer: createPlayer(true, isHardDifficulty),\n    compPlayer: createPlayer(false, isHardDifficulty),\n    startGame: function () {\n      this.gameStarted = true;\n      this.humanPlayer.gameboard = createGameboard(10);\n      this.humanPlayer.gameboard.createAllShips();\n\n      this.compPlayer.gameboard = createGameboard(10);\n      this.compPlayer.gameboard.createAllShips();\n      this.manageTurns();\n    },\n    manageTurns: function (x?: number, y?: number) {\n      if (this.gameOver) {\n        return;\n      }\n      if (this.humanPlayer.isMyTurn) {\n        if (x !== undefined && y !== undefined) {\n          this.humanPlayer.makeHumanMove(x, y, this.compPlayer);\n          this.checkEndOfGame();\n          if (!this.gameOver) {\n            this.humanPlayer.toggleTurn();\n            this.compPlayer.toggleTurn();\n\n            if (this.compPlayer.isMyTurn) {\n              this.compPlayer.makeComputerMove(this.humanPlayer);\n              this.checkEndOfGame();\n              if (!this.gameOver) {\n                this.humanPlayer.toggleTurn();\n                this.compPlayer.toggleTurn();\n              }\n            }\n          }\n        }\n      }\n    },\n    checkEndOfGame: function () {\n      if (this.compPlayer.gameboard.allShipsSunk()) {\n        alert(\"Congratulations! You have won!\");\n        this.gameOver = true;\n      } else if (this.humanPlayer.gameboard.allShipsSunk()) {\n        alert(\"Game Over, you lost...\");\n        this.gameOver = true;\n      }\n    },\n    gameOver: false,\n  };\n  return gameLoop;\n}\n","import { createGameLoop } from \"../src/gameLoop\";\nimport { Gameboard } from \"./gameboard\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const startGameBtn = document.querySelector(\"#startBtn\");\n  const difficultySelector = document.querySelector(\n    \"#difficulty\"\n  ) as HTMLSelectElement;\n  const opponentBoard = document.querySelector(\".opponentBoard\");\n  const playersBoard = document.querySelector(\".playersBoard\");\n\n  let gameLoop = createGameLoop(false);\n\n  if (opponentBoard instanceof HTMLElement) {\n    createGrid(gameLoop.humanPlayer.gameboard, opponentBoard, \"opponentBoard\");\n  } else {\n    console.error(\"Opponent board not found\");\n  }\n  if (playersBoard instanceof HTMLElement) {\n    createGrid(gameLoop.humanPlayer.gameboard, playersBoard, \"playersBoard\");\n  } else {\n    console.error(\"Players board not found\");\n  }\n\n  if (startGameBtn && difficultySelector) {\n    startGameBtn.addEventListener(\"click\", () => {\n      difficultySelector.disabled = true;\n      let isHardDifficulty = difficultySelector.value === \"Hard\";\n      gameLoop = createGameLoop(isHardDifficulty);\n      gameLoop.startGame();\n\n      if (opponentBoard instanceof HTMLElement) {\n        createGrid(\n          gameLoop.humanPlayer.gameboard,\n          opponentBoard,\n          \"opponentBoard\"\n        );\n      } else {\n        console.error(\"Opponent board not found\");\n      }\n      if (playersBoard instanceof HTMLElement) {\n        createGrid(\n          gameLoop.humanPlayer.gameboard,\n          playersBoard,\n          \"playersBoard\"\n        );\n      } else {\n        console.error(\"Players board not found\");\n      }\n\n      gameLoop.manageTurns();\n    });\n  } else {\n    console.error(\"Start Game button or difficulty selector not found\");\n  }\n\n  function createGrid(\n    gameboard: Gameboard,\n    htmlGrid: HTMLElement,\n    boardClass: string\n  ) {\n    htmlGrid.innerHTML = \"\";\n    htmlGrid.style.gridTemplateColumns = `repeat(${gameboard.size}, 1fr)`;\n    htmlGrid.style.gridTemplateRows = `repeat(${gameboard.size}, 1fr)`;\n    const root = document.documentElement;\n    root.style.setProperty(\"--num\", gameboard.size.toString());\n    for (let i = 0; i < gameboard.size; i++) {\n      for (let j = 0; j < gameboard.size; j++) {\n        const cell = document.createElement(\"div\");\n        cell.classList.add(\"cell\");\n        cell.dataset.x = i.toString();\n        cell.dataset.y = j.toString();\n        if (boardClass === \"opponentBoard\") {\n          cell.addEventListener(\"click\", (event) => {\n            const target = event.target as HTMLElement;\n            if (target.dataset.x && target.dataset.y) {\n              const x = parseInt(target.dataset.x, 10);\n              const y = parseInt(target.dataset.y, 10);\n              gameLoop.manageTurns(x, y);\n              updateMoveLists();\n            } else {\n              console.error(\"Data attributes x and y are not set\");\n            }\n          });\n        }\n        htmlGrid.appendChild(cell);\n      }\n    }\n    if (boardClass === \"playersBoard\") {\n      updateShipCells(\"playersBoard\", gameLoop.humanPlayer.gameboard);\n    }\n  }\n\n  function updateElementTextContent(elementId: string, moves: number[][]) {\n    const element = document.getElementById(elementId);\n    if (element) {\n      element.textContent = moves\n        .map((move) => `(${move[0]}, ${move[1]})`)\n        .join(\", \");\n    }\n  }\n\n  function updateShipCells(boardClass: string, gameboard: Gameboard) {\n    for (let x = 0; x < gameboard.size; x++) {\n      for (let y = 0; y < gameboard.size; y++) {\n        if (gameboard.grid[x][y].ship !== null) {\n          const cell = document.querySelector(\n            `.${boardClass} .cell[data-x=\"${x}\"][data-y=\"${y}\"]`\n          );\n          if (cell) {\n            cell.classList.add(\"ship\");\n          }\n        }\n      }\n    }\n  }\n\n  function updateCellClasses(\n    boardClass: string,\n    moves: number[][],\n    className: string\n  ) {\n    moves.forEach((move) => {\n      const cell = document.querySelector(\n        `.${boardClass} .cell[data-x='${move[0]}'][data-y='${move[1]}']`\n      );\n      if (cell) {\n        cell.classList.add(className);\n      }\n    });\n  }\n\n  function updateMoveLists() {\n    updateElementTextContent(\n      \"humanMissedAttacks\",\n      gameLoop.humanPlayer.gameboard.missedAttacks\n    );\n    updateElementTextContent(\n      \"computerMissedAttacks\",\n      gameLoop.compPlayer.gameboard.missedAttacks\n    );\n    updateElementTextContent(\n      \"humanHitCells\",\n      gameLoop.humanPlayer.gameboard.getHitCells()\n    );\n    updateElementTextContent(\n      \"computerHitCells\",\n      gameLoop.compPlayer.gameboard.getHitCells()\n    );\n\n    updateCellClasses(\n      \"opponentBoard\",\n      gameLoop.compPlayer.gameboard.missedAttacks,\n      \"missedAttacks\"\n    );\n    updateCellClasses(\n      \"playersBoard\",\n      gameLoop.humanPlayer.gameboard.missedAttacks,\n      \"missedAttacks\"\n    );\n    updateCellClasses(\n      \"opponentBoard\",\n      gameLoop.compPlayer.gameboard.getHitCells(),\n      \"hits\"\n    );\n    updateCellClasses(\n      \"playersBoard\",\n      gameLoop.humanPlayer.gameboard.getHitCells(),\n      \"hits\"\n    );\n  }\n});\n"]}